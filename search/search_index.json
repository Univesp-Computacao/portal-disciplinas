{"config":{"indexing":"full","lang":["en"],"min_search_length":3,"prebuild_index":false,"separator":"[\\s\\-]+"},"docs":[{"location":"","text":"Eixo Computa\u00e7\u00e3o - UNIVESP - Grupo de estudos \u00b6 Sobre \u00b6 Grupo criado para compartilhar e estudar c\u00f3digos de computa\u00e7\u00e3o. Para desenvolvimento dos trabalhos, o Projeto se baseia nas disciplinas que est\u00e3o sendo abordadas nos Cursos de Tecnologia da Informa\u00e7\u00e3o, Ci\u00eancia de Dados e Engenharia da Computa\u00e7\u00e3o, mas assim como ser\u00e1 com o Eixo Computa\u00e7\u00e3o, na Educa\u00e7\u00e3o tamb\u00e9m existem demandas por esse tipo de aprendizado e estamos sempre a disposi\u00e7\u00e3o do Eixo Licenciatura da UNIVESP para o desenvolvimento de novas frentes para por em pr\u00e1tica esses conhecimentos. Proposta \u00b6 A ideia \u00e9 que no come\u00e7o os reposit\u00f3rios venham a ser baseados e guiados por discipinas do curso, dando no in\u00edcio prefer\u00eancia \u00e0 disciplinas mais abrangentes. Depois podemos nos aprofundar, dando exemplos de projetos reais: se aprofundando em linguagens de programa\u00e7\u00e3o com banco de dados, al\u00e9m frameworks, containers, cloud, etc... Estrutura \u00b6 Algoritmo e Programa\u00e7\u00e3o de Computadores I e II (COM110 e COM120) \u00b6 Objetivo: Compreender conceitos b\u00e1sicos de programa\u00e7\u00e3o e descrever algoritmos para resolver problemas utilizando a linguagem de programa\u00e7\u00e3o Python, incluindo depura\u00e7\u00e3o e testes automatizados b\u00e1sicos. Refor\u00e7ar a pr\u00e1tica de programa\u00e7\u00e3o em Python, composi\u00e7\u00e3o de programas com m\u00faltiplos arquivos de c\u00f3digo fonte, uso de bibliotecas, APIs (WEB) e GUIs. No\u00e7\u00f5es de programa\u00e7\u00e3o orientada a objetos. [link] Fundamentos da Internet e Web (COM130) \u00b6 Objetivo: HTML5,CSS3: Estrutura do conte\u00fado versus apar\u00eancia do documento, tags HTML b\u00e1sicas (H1, P, etc) e e extens\u00edveis (div, span, etc), atributos b\u00e1sicos de CSS (color, text-align, etc); seletores CSS; Programa\u00e7\u00e3o Orientada a Objetos (EEP101) \u00b6 Objetivo: Arquitetura de Software: Coes\u00e3o e acoplamento; Aprofundar os conceitos b\u00e1sicos de orienta\u00e7\u00e3o a objetos, entre eles: classes, objetos, interfaces, heran\u00e7a e polimorfismo; Introduzir t\u00e9cnicas de tratamento de erros com exce\u00e7\u00f5es; no\u00e7\u00f5es de padr\u00f5es de projeto (explorando alguns exemplos como Observer, Adapter, Null Object); Apresentar no\u00e7\u00f5es de aspectos, fun\u00e7\u00f5es an\u00f4nimas, closures e t\u00e9cnicas funcionais (Map,Filter, Fold, etc). Estruturas de Dados (EID001) \u00b6 Objetivo: Estruturas b\u00e1sicas para representa\u00e7\u00e3o de informa\u00e7\u00f5es: pilhas, filas e listas ligadas, \u00e1rvores, grafos, tabelas de hash e suas generaliza\u00e7\u00f5es, implementa\u00e7\u00f5es. Algoritmos para constru\u00e7\u00e3o, consulta e manipula\u00e7\u00e3o de tais estruturas. Desenvolvimento, implementa\u00e7\u00e3o e testes de programas usando tais estruturas em aplica\u00e7\u00f5es espec\u00edficas. Page-Rank. Banco de Dados (COM300) \u00b6 Objetivo: Introdu\u00e7\u00e3o a banco de dados (Processamento de Arquivos vs SGBDs, arquitetura de SGBDs), modelagem de dados (conceitual, modelo entidade- relacionamento), Linguagem de Consulta e Manipula\u00e7\u00e3o de Dados (SQL), Indexa\u00e7\u00e3o, Bancos de Dados N\u00e3o Relacionais ou NoSQL (Bancos de Dados Orientados a Documentos, Bancos de Dados em Colunas, Bancos de Orientados a Grafos). Mapeamento objeto-relacional (ORM).","title":"Inicio"},{"location":"#eixo-computacao-univesp-grupo-de-estudos","text":"","title":"Eixo Computa\u00e7\u00e3o - UNIVESP - Grupo de estudos"},{"location":"#sobre","text":"Grupo criado para compartilhar e estudar c\u00f3digos de computa\u00e7\u00e3o. Para desenvolvimento dos trabalhos, o Projeto se baseia nas disciplinas que est\u00e3o sendo abordadas nos Cursos de Tecnologia da Informa\u00e7\u00e3o, Ci\u00eancia de Dados e Engenharia da Computa\u00e7\u00e3o, mas assim como ser\u00e1 com o Eixo Computa\u00e7\u00e3o, na Educa\u00e7\u00e3o tamb\u00e9m existem demandas por esse tipo de aprendizado e estamos sempre a disposi\u00e7\u00e3o do Eixo Licenciatura da UNIVESP para o desenvolvimento de novas frentes para por em pr\u00e1tica esses conhecimentos.","title":"Sobre"},{"location":"#proposta","text":"A ideia \u00e9 que no come\u00e7o os reposit\u00f3rios venham a ser baseados e guiados por discipinas do curso, dando no in\u00edcio prefer\u00eancia \u00e0 disciplinas mais abrangentes. Depois podemos nos aprofundar, dando exemplos de projetos reais: se aprofundando em linguagens de programa\u00e7\u00e3o com banco de dados, al\u00e9m frameworks, containers, cloud, etc...","title":"Proposta"},{"location":"#estrutura","text":"","title":"Estrutura"},{"location":"#algoritmo-e-programacao-de-computadores-i-e-ii-com110-e-com120","text":"Objetivo: Compreender conceitos b\u00e1sicos de programa\u00e7\u00e3o e descrever algoritmos para resolver problemas utilizando a linguagem de programa\u00e7\u00e3o Python, incluindo depura\u00e7\u00e3o e testes automatizados b\u00e1sicos. Refor\u00e7ar a pr\u00e1tica de programa\u00e7\u00e3o em Python, composi\u00e7\u00e3o de programas com m\u00faltiplos arquivos de c\u00f3digo fonte, uso de bibliotecas, APIs (WEB) e GUIs. No\u00e7\u00f5es de programa\u00e7\u00e3o orientada a objetos. [link]","title":"Algoritmo e Programa\u00e7\u00e3o de Computadores I e II (COM110 e COM120)"},{"location":"#fundamentos-da-internet-e-web-com130","text":"Objetivo: HTML5,CSS3: Estrutura do conte\u00fado versus apar\u00eancia do documento, tags HTML b\u00e1sicas (H1, P, etc) e e extens\u00edveis (div, span, etc), atributos b\u00e1sicos de CSS (color, text-align, etc); seletores CSS;","title":"Fundamentos da Internet e Web (COM130)"},{"location":"#programacao-orientada-a-objetos-eep101","text":"Objetivo: Arquitetura de Software: Coes\u00e3o e acoplamento; Aprofundar os conceitos b\u00e1sicos de orienta\u00e7\u00e3o a objetos, entre eles: classes, objetos, interfaces, heran\u00e7a e polimorfismo; Introduzir t\u00e9cnicas de tratamento de erros com exce\u00e7\u00f5es; no\u00e7\u00f5es de padr\u00f5es de projeto (explorando alguns exemplos como Observer, Adapter, Null Object); Apresentar no\u00e7\u00f5es de aspectos, fun\u00e7\u00f5es an\u00f4nimas, closures e t\u00e9cnicas funcionais (Map,Filter, Fold, etc).","title":"Programa\u00e7\u00e3o Orientada a Objetos (EEP101)"},{"location":"#estruturas-de-dados-eid001","text":"Objetivo: Estruturas b\u00e1sicas para representa\u00e7\u00e3o de informa\u00e7\u00f5es: pilhas, filas e listas ligadas, \u00e1rvores, grafos, tabelas de hash e suas generaliza\u00e7\u00f5es, implementa\u00e7\u00f5es. Algoritmos para constru\u00e7\u00e3o, consulta e manipula\u00e7\u00e3o de tais estruturas. Desenvolvimento, implementa\u00e7\u00e3o e testes de programas usando tais estruturas em aplica\u00e7\u00f5es espec\u00edficas. Page-Rank.","title":"Estruturas de Dados (EID001)"},{"location":"#banco-de-dados-com300","text":"Objetivo: Introdu\u00e7\u00e3o a banco de dados (Processamento de Arquivos vs SGBDs, arquitetura de SGBDs), modelagem de dados (conceitual, modelo entidade- relacionamento), Linguagem de Consulta e Manipula\u00e7\u00e3o de Dados (SQL), Indexa\u00e7\u00e3o, Bancos de Dados N\u00e3o Relacionais ou NoSQL (Bancos de Dados Orientados a Documentos, Bancos de Dados em Colunas, Bancos de Orientados a Grafos). Mapeamento objeto-relacional (ORM).","title":"Banco de Dados (COM300)"},{"location":"OOP/oop/","text":"Programa\u00e7\u00e3o Orientada a Objetos \u00b6 Objetivos: No\u00e7\u00f5es de arquitetura de software com \u00eanfase em programa\u00e7\u00e3o orientada a objetos. Ementa: Arquitetura de Software: Coes\u00e3o e acoplamento; Aprofundar os conceitos b\u00e1sicos de orienta\u00e7\u00e3o a objetos, entre eles: classes, objetos, interfaces, heran\u00e7a e polimorfismo; Introduzir t\u00e9cnicas de tratamento de erros com exce\u00e7\u00f5es; no\u00e7\u00f5es depadr\u00f5es de projeto (explorando alguns exemplos como Observer, Adapter, Null Object); Apresentar no\u00e7\u00f5es de aspectos, fun\u00e7\u00f5es an\u00f4nimas, closures e t\u00e9cnicas funcionais (Map, Filter, Fold, etc). Bibliografia Base: - F\u00e9lix, Rafael. Programa\u00e7\u00e3o orientada a objetos. 2017. Pearson. - Puga, Sandra; Rissetti, Gerson. L\u00f3gica de programa\u00e7\u00e3o e estruturas de dados com aplica\u00e7\u00f5es em Java. 2016. Pearson. - Sommerville, Ian. Engenharia de Software. 2007. Pearson. Bibliografia Complementar: - Stephen, Samuel; Bocutiu, Stefan. Programando com Kotlin. 2017. Novatec. - DEITEL, H. M.; DEITEL, P.J. Java: Como Programar. S\u00e3o Paulo: Pearson Prentice- Hall, 8a Edi\u00e7\u00e3o, 2010. - DEITEL, H. M.; DEITEL, P.J. Java: Como Programar. S\u00e3o Paulo: Pearson Prentice- Hall, 6a Edi\u00e7\u00e3o, 2005. - DEITEL, H. M.; DEITEL, P.J. C++: Como Programar. S\u00e3o Paulo: Pearson Prentice- Hall, 5a Edi\u00e7\u00e3o, 2006. - MIZRAHI, V. V. Treinamento em Linguagem C++: m\u00f3dulo 1. S\u00e3o Paulo: Pearson Prentice-Hall, 2a Edi\u00e7\u00e3o, 2006. - MIZRAHI, V. V. Treinamento em Linguagem C++: m\u00f3dulo 2. S\u00e3o Paulo: Pearson Prentice-Hall, 2a Edi\u00e7\u00e3o, 2006.","title":"OOP"},{"location":"OOP/oop/#programacao-orientada-a-objetos","text":"Objetivos: No\u00e7\u00f5es de arquitetura de software com \u00eanfase em programa\u00e7\u00e3o orientada a objetos. Ementa: Arquitetura de Software: Coes\u00e3o e acoplamento; Aprofundar os conceitos b\u00e1sicos de orienta\u00e7\u00e3o a objetos, entre eles: classes, objetos, interfaces, heran\u00e7a e polimorfismo; Introduzir t\u00e9cnicas de tratamento de erros com exce\u00e7\u00f5es; no\u00e7\u00f5es depadr\u00f5es de projeto (explorando alguns exemplos como Observer, Adapter, Null Object); Apresentar no\u00e7\u00f5es de aspectos, fun\u00e7\u00f5es an\u00f4nimas, closures e t\u00e9cnicas funcionais (Map, Filter, Fold, etc). Bibliografia Base: - F\u00e9lix, Rafael. Programa\u00e7\u00e3o orientada a objetos. 2017. Pearson. - Puga, Sandra; Rissetti, Gerson. L\u00f3gica de programa\u00e7\u00e3o e estruturas de dados com aplica\u00e7\u00f5es em Java. 2016. Pearson. - Sommerville, Ian. Engenharia de Software. 2007. Pearson. Bibliografia Complementar: - Stephen, Samuel; Bocutiu, Stefan. Programando com Kotlin. 2017. Novatec. - DEITEL, H. M.; DEITEL, P.J. Java: Como Programar. S\u00e3o Paulo: Pearson Prentice- Hall, 8a Edi\u00e7\u00e3o, 2010. - DEITEL, H. M.; DEITEL, P.J. Java: Como Programar. S\u00e3o Paulo: Pearson Prentice- Hall, 6a Edi\u00e7\u00e3o, 2005. - DEITEL, H. M.; DEITEL, P.J. C++: Como Programar. S\u00e3o Paulo: Pearson Prentice- Hall, 5a Edi\u00e7\u00e3o, 2006. - MIZRAHI, V. V. Treinamento em Linguagem C++: m\u00f3dulo 1. S\u00e3o Paulo: Pearson Prentice-Hall, 2a Edi\u00e7\u00e3o, 2006. - MIZRAHI, V. V. Treinamento em Linguagem C++: m\u00f3dulo 2. S\u00e3o Paulo: Pearson Prentice-Hall, 2a Edi\u00e7\u00e3o, 2006.","title":"Programa\u00e7\u00e3o Orientada a Objetos"},{"location":"algoritmos_e_programa%C3%A7%C3%A3o/algo/","text":"Algoritmos e Programa\u00e7\u00e3o de Computadores \u00b6 estudos referente a COM110 e COM120 Ementa: Algoritmos: caracteriza\u00e7\u00e3o, nota\u00e7\u00e3o, estruturas b\u00e1sicas. Conceitos de linguagens algor\u00edtmicas: express\u00f5es; comandos sequenciais, seletivos e repetitivos; entrada/sa\u00edda; vari\u00e1veis; constantes; listas, vetores (listas em Python), matrizes, strings; fun\u00e7\u00f5es; escopo de vari\u00e1veis; Desenvolvimento, depura\u00e7\u00e3o, no\u00e7\u00f5es de testes automatizados e documenta\u00e7\u00e3o de programas utilizando linguagem Python. Depura\u00e7\u00e3o de programas. Conceito e uso de pilhas, filas, listas, \u00e1rvores. Recurs\u00e3o. Algoritmos de Ordena\u00e7\u00e3o e Busca. No\u00e7\u00f5es de gerenciamento de mem\u00f3ria e manipula\u00e7\u00e3o de listas. M\u00f3dulos e no\u00e7\u00f5es de objetos, arquivos. Modulariza\u00e7\u00e3o (m\u00f3dulos, bibliotecas, interfaces). Uso de APIs b\u00e1sicas da WEB e manipula\u00e7\u00e3o de dados (JSON).Cria\u00e7\u00e3o de interfaces gr\u00e1ficas simples. Controle de Vers\u00e3o (git). Testes automatizados. Bibliografia Base: PERKOVIC, Ljubomir. Introdu\u00e7\u00e3o \u00e0 Computa\u00e7\u00e3o Usando Python - Um Foco no Desenvolvimento de Aplica\u00e7\u00f5es. 1 ed. LTC. 2016. Miller, Brad; Ranum, David. Como Pensar como um Cientista da Computa\u00e7\u00e3o. 2019. Dispon\u00edvel em: https://panda.ime.usp.br/pensepy/static/pensepy/index.html Bibliografia Complementar: FREEMAN, Eric. Use a Cabe\u00e7a! Aprenda Programar. 1 ed. Alta Books. 2019. DOWNEY, Allen. Pense Python: pense como um Cientista da Computa\u00e7\u00e3o. 1 ed. Novatec. 2016. Kon, Fabio. Introdu\u00e7\u00e3o \u00e0 Ci\u00eancia da Computa\u00e7\u00e3o em Python. Coursera. 2019. Dispon\u00edvel online em: https://www.coursera.org/learn/ciencia-computacao- python-conceitos Shaw, Zed A. Aprenda Python 3 do Jeito Certo: uma Introdu\u00e7\u00e3o Muito Simples ao Incr\u00edvel Mundo dos Computadores e da Codifica\u00e7\u00e3o. 2019. Alta Books","title":"Ementa"},{"location":"algoritmos_e_programa%C3%A7%C3%A3o/algo/#algoritmos-e-programacao-de-computadores","text":"estudos referente a COM110 e COM120 Ementa: Algoritmos: caracteriza\u00e7\u00e3o, nota\u00e7\u00e3o, estruturas b\u00e1sicas. Conceitos de linguagens algor\u00edtmicas: express\u00f5es; comandos sequenciais, seletivos e repetitivos; entrada/sa\u00edda; vari\u00e1veis; constantes; listas, vetores (listas em Python), matrizes, strings; fun\u00e7\u00f5es; escopo de vari\u00e1veis; Desenvolvimento, depura\u00e7\u00e3o, no\u00e7\u00f5es de testes automatizados e documenta\u00e7\u00e3o de programas utilizando linguagem Python. Depura\u00e7\u00e3o de programas. Conceito e uso de pilhas, filas, listas, \u00e1rvores. Recurs\u00e3o. Algoritmos de Ordena\u00e7\u00e3o e Busca. No\u00e7\u00f5es de gerenciamento de mem\u00f3ria e manipula\u00e7\u00e3o de listas. M\u00f3dulos e no\u00e7\u00f5es de objetos, arquivos. Modulariza\u00e7\u00e3o (m\u00f3dulos, bibliotecas, interfaces). Uso de APIs b\u00e1sicas da WEB e manipula\u00e7\u00e3o de dados (JSON).Cria\u00e7\u00e3o de interfaces gr\u00e1ficas simples. Controle de Vers\u00e3o (git). Testes automatizados. Bibliografia Base: PERKOVIC, Ljubomir. Introdu\u00e7\u00e3o \u00e0 Computa\u00e7\u00e3o Usando Python - Um Foco no Desenvolvimento de Aplica\u00e7\u00f5es. 1 ed. LTC. 2016. Miller, Brad; Ranum, David. Como Pensar como um Cientista da Computa\u00e7\u00e3o. 2019. Dispon\u00edvel em: https://panda.ime.usp.br/pensepy/static/pensepy/index.html Bibliografia Complementar: FREEMAN, Eric. Use a Cabe\u00e7a! Aprenda Programar. 1 ed. Alta Books. 2019. DOWNEY, Allen. Pense Python: pense como um Cientista da Computa\u00e7\u00e3o. 1 ed. Novatec. 2016. Kon, Fabio. Introdu\u00e7\u00e3o \u00e0 Ci\u00eancia da Computa\u00e7\u00e3o em Python. Coursera. 2019. Dispon\u00edvel online em: https://www.coursera.org/learn/ciencia-computacao- python-conceitos Shaw, Zed A. Aprenda Python 3 do Jeito Certo: uma Introdu\u00e7\u00e3o Muito Simples ao Incr\u00edvel Mundo dos Computadores e da Codifica\u00e7\u00e3o. 2019. Alta Books","title":"Algoritmos e Programa\u00e7\u00e3o de Computadores"},{"location":"algoritmos_e_programa%C3%A7%C3%A3o/arquivos/","text":"Manipula\u00e7\u00e3o de Arquivos \u00b6 A manipula\u00e7\u00e3o de arquivos sempre foi um tema central na computa\u00e7\u00e3o, pois afinal, n\u00e3o \u00e9 muito \u00fatil ter que executar repetidas vezes o mesmo c\u00f3digo para manter um hist\u00f3rico de resultados, j\u00e1 que, a linguagem de programa\u00e7\u00e3o em si, n\u00e3o \u00e9 capaz de armazenar dados. A manipula\u00e7\u00e3o de arquivos \u00e9 um recurso poderoso que serve basicamente para transferir informa\u00e7\u00e3o para algum arquivo de texto, que seja facilmente guardado por qualquer tipo de Sistema Operacional (*.html, *.txt, *.csv, *.md, etc.). Mas por se tratar do uso direto de recursos da m\u00e1quina, devemos monitorar esse uso para n\u00e3o prejudicar apenas a aplica\u00e7\u00e3o mas o sistema operacional de quem a usa. Mas por que manipular arquivos \u00e9 t\u00e3o especial? Porque permite de maneira simples a persist\u00eancia dos dados, ou seja, estamos transferindo o que o Python armazena na RAM para um HD/SSD. Como no simples exemplo abaixo: mensagem = \"Variavel para gravar informacao em tipo string\" with open ( \"output.txt\" , 'w' ) as arquivo : arquivo . write ( mensagem ) Como resultado deste comando temos a transfer\u00eancia do valor de string que a vari\u00e1vel mensagem assumiu temporariamente na mem\u00f3ria RAM e escrevemos em um HD/SSD, de modo a preservar a informa\u00e7\u00e3o, visto que o linguagens de programa\u00e7\u00e3o isoladas n\u00e3o possuem poder de persist\u00eancia de dados, precisando armazenar em arquivos diretamente no Sistema Operacional, ou, em softwares especializadas, como Bancos de Dados. Sem precisar importar nenhum m\u00f3dulo espec\u00edfico utilizamos a fun\u00e7\u00e3o open() que retorna um objeto de manipula\u00e7\u00e3o de arquivos. Dentro da fun\u00e7\u00e3o open() , passamos apenas dois par\u00e2metros: o nome do arquivo e o modo de abertura , e este arquivo ficou armazenada em uma vari\u00e1vel do nosso programa ( arquivo ) Alguns podem pensar que a fun\u00e7\u00e7\u00e3o open() ir\u00e1 abrir o arquivo no sistema operacional, mas n\u00e3o, ela apenas cria uma conex\u00e3o entre a mem\u00f3ria RAM e o HD/SSD. Usamos o m\u00e9todo write() para escrever dentro do arquivo, passando como argumento uma string ou mesmo uma outra vari\u00e1vel que aponte para uma string. Com o with no in\u00edcio da express\u00e3o estamos indicando que estamos trabalhando em contexto , ou seja, o arquivo ser\u00e1 automaticamente fechado ap\u00f3s o uso. Isso simplesmente nos ajuda a usar com precis\u00e3o os recursos da m\u00e1quina. Criando um arquivo .txt a partir de uma API \u00b6 Para tornar o uso de arquivos veross\u00edmil \u00e0 realidade vamos dar um exemplo bem casual. Suponha que voc\u00ea precise consultar um CEP e armazenaro bairro, a cidade e a UF. import requests mensagem = \" \\n Ol\u00e1, digite o cep que desejas armazenar: \\n \" cep = input ( mensagem ) url = f \"http://viacep.com.br/ws/ { cep } /json/\" retorno = requests . get ( url ) conteudo = retorno . json () bairro = conteudo [ 'bairro' ] localidade = conteudo [ 'localidade' ] uf = conteudo [ 'uf' ] endereco = f \" { bairro } \\t { localidade } \\t { uf } \" with open ( 'enderecos.txt' , 'a' ) as arquivo : arquivo . write ( endereco ) arquivo . write ( ' \\n ' ) Com o m\u00f3dulo requests fazemos uma requisi\u00e7\u00e3o \u00e0 URL da API ViaCep, e passamos atrav\u00e9s de uma f-string , a vari\u00e1vel contendo o n\u00famero do CEP em formato string. Recebemos dessa requisi\u00e7\u00e3o um objeto <class 'requests.models.Response'> , que cont\u00e9m justamente o c\u00f3digo da resposta. Se recebermos <Response [200]> , perfeito, podemos prosseguir. O pr\u00f3ximo passo \u00e9 transformar esse requests.models em um dicion\u00e1rio no python utilizando o m\u00e9todo json() . A partir de agora podemos manipular o conte\u00fado propriamente dito da nossa requisi\u00e7\u00e3o, pois agora estamos trabalhando com um objeto de tipo <class 'dict'> . A cada vez que executarmos este c\u00f3digo e passarmos um cep v\u00e1lido, ficar\u00e1 salvo em um arquivo chamado 'enderecos.txt' as informa\u00e7\u00f5es que selecionamos. Observa\u00e7\u00e3o \u00b6 A proposta desse c\u00f3digo era apenas para explorar um pouco da combina\u00e7\u00e3o do m\u00f3dulo requests (que deve ser instalado via pip) e a manipula\u00e7\u00e3o de arquivos, usando m\u00e9todos diretamente do Python, como o open(), write(), readlines() entre outros. H\u00e1 muito a se fazer com respeito da tratativa de exce\u00e7\u00f5es. A primeira e mais \u00f3bvia seria que dentro do input apenas fosem aceitos apenas n\u00fameros e que o tamanho dessa string fosse igual a 8. Refer\u00eancias e links \u00fateis \u00b6 https://pypi.org/project/requests/ https://viacep.com.br","title":"Manipulando arquivos"},{"location":"algoritmos_e_programa%C3%A7%C3%A3o/arquivos/#manipulacao-de-arquivos","text":"A manipula\u00e7\u00e3o de arquivos sempre foi um tema central na computa\u00e7\u00e3o, pois afinal, n\u00e3o \u00e9 muito \u00fatil ter que executar repetidas vezes o mesmo c\u00f3digo para manter um hist\u00f3rico de resultados, j\u00e1 que, a linguagem de programa\u00e7\u00e3o em si, n\u00e3o \u00e9 capaz de armazenar dados. A manipula\u00e7\u00e3o de arquivos \u00e9 um recurso poderoso que serve basicamente para transferir informa\u00e7\u00e3o para algum arquivo de texto, que seja facilmente guardado por qualquer tipo de Sistema Operacional (*.html, *.txt, *.csv, *.md, etc.). Mas por se tratar do uso direto de recursos da m\u00e1quina, devemos monitorar esse uso para n\u00e3o prejudicar apenas a aplica\u00e7\u00e3o mas o sistema operacional de quem a usa. Mas por que manipular arquivos \u00e9 t\u00e3o especial? Porque permite de maneira simples a persist\u00eancia dos dados, ou seja, estamos transferindo o que o Python armazena na RAM para um HD/SSD. Como no simples exemplo abaixo: mensagem = \"Variavel para gravar informacao em tipo string\" with open ( \"output.txt\" , 'w' ) as arquivo : arquivo . write ( mensagem ) Como resultado deste comando temos a transfer\u00eancia do valor de string que a vari\u00e1vel mensagem assumiu temporariamente na mem\u00f3ria RAM e escrevemos em um HD/SSD, de modo a preservar a informa\u00e7\u00e3o, visto que o linguagens de programa\u00e7\u00e3o isoladas n\u00e3o possuem poder de persist\u00eancia de dados, precisando armazenar em arquivos diretamente no Sistema Operacional, ou, em softwares especializadas, como Bancos de Dados. Sem precisar importar nenhum m\u00f3dulo espec\u00edfico utilizamos a fun\u00e7\u00e3o open() que retorna um objeto de manipula\u00e7\u00e3o de arquivos. Dentro da fun\u00e7\u00e3o open() , passamos apenas dois par\u00e2metros: o nome do arquivo e o modo de abertura , e este arquivo ficou armazenada em uma vari\u00e1vel do nosso programa ( arquivo ) Alguns podem pensar que a fun\u00e7\u00e7\u00e3o open() ir\u00e1 abrir o arquivo no sistema operacional, mas n\u00e3o, ela apenas cria uma conex\u00e3o entre a mem\u00f3ria RAM e o HD/SSD. Usamos o m\u00e9todo write() para escrever dentro do arquivo, passando como argumento uma string ou mesmo uma outra vari\u00e1vel que aponte para uma string. Com o with no in\u00edcio da express\u00e3o estamos indicando que estamos trabalhando em contexto , ou seja, o arquivo ser\u00e1 automaticamente fechado ap\u00f3s o uso. Isso simplesmente nos ajuda a usar com precis\u00e3o os recursos da m\u00e1quina.","title":"Manipula\u00e7\u00e3o de Arquivos"},{"location":"algoritmos_e_programa%C3%A7%C3%A3o/arquivos/#criando-um-arquivo-txt-a-partir-de-uma-api","text":"Para tornar o uso de arquivos veross\u00edmil \u00e0 realidade vamos dar um exemplo bem casual. Suponha que voc\u00ea precise consultar um CEP e armazenaro bairro, a cidade e a UF. import requests mensagem = \" \\n Ol\u00e1, digite o cep que desejas armazenar: \\n \" cep = input ( mensagem ) url = f \"http://viacep.com.br/ws/ { cep } /json/\" retorno = requests . get ( url ) conteudo = retorno . json () bairro = conteudo [ 'bairro' ] localidade = conteudo [ 'localidade' ] uf = conteudo [ 'uf' ] endereco = f \" { bairro } \\t { localidade } \\t { uf } \" with open ( 'enderecos.txt' , 'a' ) as arquivo : arquivo . write ( endereco ) arquivo . write ( ' \\n ' ) Com o m\u00f3dulo requests fazemos uma requisi\u00e7\u00e3o \u00e0 URL da API ViaCep, e passamos atrav\u00e9s de uma f-string , a vari\u00e1vel contendo o n\u00famero do CEP em formato string. Recebemos dessa requisi\u00e7\u00e3o um objeto <class 'requests.models.Response'> , que cont\u00e9m justamente o c\u00f3digo da resposta. Se recebermos <Response [200]> , perfeito, podemos prosseguir. O pr\u00f3ximo passo \u00e9 transformar esse requests.models em um dicion\u00e1rio no python utilizando o m\u00e9todo json() . A partir de agora podemos manipular o conte\u00fado propriamente dito da nossa requisi\u00e7\u00e3o, pois agora estamos trabalhando com um objeto de tipo <class 'dict'> . A cada vez que executarmos este c\u00f3digo e passarmos um cep v\u00e1lido, ficar\u00e1 salvo em um arquivo chamado 'enderecos.txt' as informa\u00e7\u00f5es que selecionamos.","title":"Criando um arquivo .txt a partir de uma API"},{"location":"algoritmos_e_programa%C3%A7%C3%A3o/arquivos/#observacao","text":"A proposta desse c\u00f3digo era apenas para explorar um pouco da combina\u00e7\u00e3o do m\u00f3dulo requests (que deve ser instalado via pip) e a manipula\u00e7\u00e3o de arquivos, usando m\u00e9todos diretamente do Python, como o open(), write(), readlines() entre outros. H\u00e1 muito a se fazer com respeito da tratativa de exce\u00e7\u00f5es. A primeira e mais \u00f3bvia seria que dentro do input apenas fosem aceitos apenas n\u00fameros e que o tamanho dessa string fosse igual a 8.","title":"Observa\u00e7\u00e3o"},{"location":"algoritmos_e_programa%C3%A7%C3%A3o/arquivos/#referencias-e-links-uteis","text":"https://pypi.org/project/requests/ https://viacep.com.br","title":"Refer\u00eancias e links \u00fateis"},{"location":"algoritmos_e_programa%C3%A7%C3%A3o/exercicios-simples/","text":"Lista de Exerc\u00edcios Simples \u00b6 Exerc\u00edcios cl\u00e1ssicos da programa\u00e7\u00e3o resolvidos com poucas linhas de c\u00f3digo. A resolu\u00e7\u00e3o comentada voc\u00ea encontra no reposit\u00f3rio do Github . Caso voc\u00ea encontre um erro ou outra maneira de fazer, e quiser colaborar, voc\u00ea pode abrir uma Issue ou mesmo enviar um Pull Request. Entre em contato para saber mais. Lista Exerc\u00edcios: \u00b6 exerc_01 - Calcular a dura\u00e7\u00e3o de anos de um planeta. exerc_02 - Calcular a soma de d\u00edgitos de um n\u00famero rand\u00f4mico de 03 d\u00edgitos. exerc_03 - Achar a \u00e1rea e o per\u00edmetro de um tri\u00e2ngulo reto. exerc_04 - Achar \u00e1rea de superf\u00edcie de um cilindro. exerc_05 - Achar per\u00edmetro e \u00e1rea de um c\u00edrculo. exerc_06 - Achar a equa\u00e7\u00e3o da linha (y=kx+b) passando por dois pontos conhecidos. exerc_07 - Determinar o n\u00famero da letra no alfabeto. exerc_08 - O n\u00famero \u00e9 negativo ou positivo? exerc_09 - O n\u00famero \u00e9 par ou \u00edmpar? exerc_10 - Determinar o m\u00e1ximo inteiro de tr\u00eas. exerc_11 - Checando a divisibilidade de um inteiro por outro. exerc_12 - Convertendo Celsiu para Farenheit. exerc_13 - Calcular massa, densidade ou volume. exerc_14 - Em qual quadrante est\u00e1 o ponto? exerc_15 - Determinar quando um ano \u00e9 bissexto. exerc_16 - Resolver equa\u00e7\u00e3o de segundo grau. exerc_17 - Adivinhar o n\u00famero rand\u00f4mico exerc_18 - Sa\u00edda dos caracteres da tabela ASCII. exerc_19 - Imprimir uma tabuada. exerc_20 - A soma e o produto dos d\u00edgitos de um n\u00famero. exerc_21 - Facorial. exerc_22 - Sequ\u00eancia de Fibonacci. exerc_23 - Achar uma equa\u00e7\u00e3o quadr\u00e1tica que tenha solu\u00e7\u00f5es em uma faixa espec\u00edfica de coeficientes. exerc_24 - Inverter a ordem dos d\u00edgitos de um n\u00famero inteiro. exerc_25 - Selecionando inteiros de uma string. exerc_26 - Determinar a porcentagem de min\u00fasculas e mai\u00fasculas de uma string. exerc_27 - Preencher uma array com n\u00fameros rand\u00f4micos. exerc_28 - Separar positivos e negativos de uma array. exerc_29 - Disribuir valores por faixa. exerc_30 - Achar a palavra mais longa de uma string. exerc_31 - Converter um texto para uma lista de palavras sem pontua\u00e7\u00e3o. exerc_32 - Bubble sort - exerc_33 - Selection sort exerc_34 - O Crivo de Erat\u00f3stenes exerc_35 - Classificar palavras em uma string pelo n\u00famero de caract\u00e9res. exerc_36 - Preencher uma matrix com n\u00fameros rand\u00f4micos. exerc_37 - Somar itens de todas linhas e colunas de uma matriz. exerc_38 - A soma de elementos da diagonal de uma matriz. exerc_39 - D\u00edgitos estilizados com Unicode. exerc_40 - Calcular pre\u00e7o por quantidade de produtos. exerc_41 - Criar dicion\u00e1rio de duas listas. exerc_42 - Deletar um item rand\u00f4mico de um dicion\u00e1rios. Exerc\u00edcios utilizando fun\u00e7\u00f5es: \u00b6 exerc_43 - Achar m\u00e9dia de dois n\u00fameros. exerc_44 - Preencher uma lista com n\u00fameros. exerc_45 - Calcular m\u00e9dia aritm\u00e9tica de uma lista de elementos. exerc_46 - Sequ\u00eancia de Fibonacci. exerc_47 - Sequ\u00eancia de FIbonacci (recurs\u00e3o). exerc_48 - Fatorial (recurs\u00e3o). exerc_49 - Inverter a ordem de uma string. exerc_50 - Busca Bin\u00e1ria. exerc_51 - Checar se um n\u00famero \u00e9 primo.","title":"Exerc\u00edcio Simples"},{"location":"algoritmos_e_programa%C3%A7%C3%A3o/exercicios-simples/#lista-de-exercicios-simples","text":"Exerc\u00edcios cl\u00e1ssicos da programa\u00e7\u00e3o resolvidos com poucas linhas de c\u00f3digo. A resolu\u00e7\u00e3o comentada voc\u00ea encontra no reposit\u00f3rio do Github . Caso voc\u00ea encontre um erro ou outra maneira de fazer, e quiser colaborar, voc\u00ea pode abrir uma Issue ou mesmo enviar um Pull Request. Entre em contato para saber mais.","title":"Lista de Exerc\u00edcios Simples"},{"location":"algoritmos_e_programa%C3%A7%C3%A3o/exercicios-simples/#lista-exercicios","text":"exerc_01 - Calcular a dura\u00e7\u00e3o de anos de um planeta. exerc_02 - Calcular a soma de d\u00edgitos de um n\u00famero rand\u00f4mico de 03 d\u00edgitos. exerc_03 - Achar a \u00e1rea e o per\u00edmetro de um tri\u00e2ngulo reto. exerc_04 - Achar \u00e1rea de superf\u00edcie de um cilindro. exerc_05 - Achar per\u00edmetro e \u00e1rea de um c\u00edrculo. exerc_06 - Achar a equa\u00e7\u00e3o da linha (y=kx+b) passando por dois pontos conhecidos. exerc_07 - Determinar o n\u00famero da letra no alfabeto. exerc_08 - O n\u00famero \u00e9 negativo ou positivo? exerc_09 - O n\u00famero \u00e9 par ou \u00edmpar? exerc_10 - Determinar o m\u00e1ximo inteiro de tr\u00eas. exerc_11 - Checando a divisibilidade de um inteiro por outro. exerc_12 - Convertendo Celsiu para Farenheit. exerc_13 - Calcular massa, densidade ou volume. exerc_14 - Em qual quadrante est\u00e1 o ponto? exerc_15 - Determinar quando um ano \u00e9 bissexto. exerc_16 - Resolver equa\u00e7\u00e3o de segundo grau. exerc_17 - Adivinhar o n\u00famero rand\u00f4mico exerc_18 - Sa\u00edda dos caracteres da tabela ASCII. exerc_19 - Imprimir uma tabuada. exerc_20 - A soma e o produto dos d\u00edgitos de um n\u00famero. exerc_21 - Facorial. exerc_22 - Sequ\u00eancia de Fibonacci. exerc_23 - Achar uma equa\u00e7\u00e3o quadr\u00e1tica que tenha solu\u00e7\u00f5es em uma faixa espec\u00edfica de coeficientes. exerc_24 - Inverter a ordem dos d\u00edgitos de um n\u00famero inteiro. exerc_25 - Selecionando inteiros de uma string. exerc_26 - Determinar a porcentagem de min\u00fasculas e mai\u00fasculas de uma string. exerc_27 - Preencher uma array com n\u00fameros rand\u00f4micos. exerc_28 - Separar positivos e negativos de uma array. exerc_29 - Disribuir valores por faixa. exerc_30 - Achar a palavra mais longa de uma string. exerc_31 - Converter um texto para uma lista de palavras sem pontua\u00e7\u00e3o. exerc_32 - Bubble sort - exerc_33 - Selection sort exerc_34 - O Crivo de Erat\u00f3stenes exerc_35 - Classificar palavras em uma string pelo n\u00famero de caract\u00e9res. exerc_36 - Preencher uma matrix com n\u00fameros rand\u00f4micos. exerc_37 - Somar itens de todas linhas e colunas de uma matriz. exerc_38 - A soma de elementos da diagonal de uma matriz. exerc_39 - D\u00edgitos estilizados com Unicode. exerc_40 - Calcular pre\u00e7o por quantidade de produtos. exerc_41 - Criar dicion\u00e1rio de duas listas. exerc_42 - Deletar um item rand\u00f4mico de um dicion\u00e1rios.","title":"Lista Exerc\u00edcios:"},{"location":"algoritmos_e_programa%C3%A7%C3%A3o/exercicios-simples/#exercicios-utilizando-funcoes","text":"exerc_43 - Achar m\u00e9dia de dois n\u00fameros. exerc_44 - Preencher uma lista com n\u00fameros. exerc_45 - Calcular m\u00e9dia aritm\u00e9tica de uma lista de elementos. exerc_46 - Sequ\u00eancia de Fibonacci. exerc_47 - Sequ\u00eancia de FIbonacci (recurs\u00e3o). exerc_48 - Fatorial (recurs\u00e3o). exerc_49 - Inverter a ordem de uma string. exerc_50 - Busca Bin\u00e1ria. exerc_51 - Checar se um n\u00famero \u00e9 primo.","title":"Exerc\u00edcios utilizando fun\u00e7\u00f5es:"},{"location":"algoritmos_e_programa%C3%A7%C3%A3o/perguntas-e-respostas-python/","text":"Python - Perguntas e Respostas \u00b6 O que \u00e9 Python? \u00b6 \u00c9 uma linguagem de alto n\u00edvel, interpretada, interativa e orientada a objetos. Python foi projetado para ser leg\u00edvel. Ela usa palavras em ingl\u00eas frequentemente onde as outras linguagens do tipo C usam pontua\u00e7\u00e3o, e tem menos elementos sint\u00e1ticos. Qual o nome de alguns recursos do Python? \u00b6 Suporte a Orienta\u00e7\u00e3o a Objeto mas tamb\u00e9m a programa\u00e7\u00e3o procedural. pode ser usada como linguagem de script ou como c\u00f3digo compilado para aplica\u00e7\u00f5es maiores. Alto n\u00edvel de dinamismo da tipagem de dados e da checagem do tipo de dados. Coletor de lixo, mecanismo de limpar a mem\u00f3rio do programa, \u00e9 autom\u00e1tico, nativo da linguagem. Qual \u00e9 o prop\u00f3sito da vari\u00e1vel de ambiente PYTHONPATH ? \u00b6 Tem um papel similar ao PATH. Essas vari\u00e1veis dizem ao Python onde locar os arquivos de m\u00f3dulos importados. Tamb\u00e9m deve incluir o diret\u00f3rio da biblioteca fonte e os diret\u00f3rios contendo o c\u00f3digo fonte do Python. PYTHONPATH \u00e9 pr\u00e9-configurado durante a instala\u00e7\u00e3o. Quais s\u00e3o os tipos de dados mais importantes do Python? \u00b6 Numbers , String, List, Tuple, Dictionary. Qual a diferen\u00e7a entre listas e tuplas ? \u00b6 A principal diferen\u00e7a entre listas e tuplas est\u00e1 na sintaxe: listas usam \"[ ]\" e tuplas usam \"( )\". Outra import\u00e2ncia fundamental \u00e9 que tuplas s\u00e3o apenas dados de leitura, elas s\u00e3o inalter\u00e1veis. O que s\u00e3o dicion\u00e1rios em Python ? \u00b6 \u00c9 um tipo de tabela hash. Dicion\u00e1rios trabalham como arrays associativos consistindo de pares de chave-valor. Uma chave ser\u00e1 um tipo de dado e um valor, por sua vez, pode ser um Objeto arbitr\u00e1rio. Como criar um dicion\u00e1rio ? \u00b6 Dicion\u00e1rios s\u00e3o identificados por serem envolvidos com {} e a sintaxe \u00e9: Como acessar chaves de um dicion\u00e1rios ? \u00b6 Como converter um dado tipo string para do tipo int ? \u00b6 Como pegar um n\u00famero ramd\u00f4mico dentro de um certo alcance? \u00b6 Como checar que todos os caracteres de uma string s\u00e3o alfanum\u00e9ricos ou apenas num\u00e9ricos? \u00b6 O Python possui um compilador pr\u00f3prio ? \u00b6 Sim, e n\u00e3o precisamos nos procupar com isso, pois o compilador do Pyhton \u00e9 autom\u00e1tico. Qual vers\u00e3o do Python devo usar ? \u00b6 Em ambiente de estudos/testes \u00e9 comum usar a vers\u00e3o mais recente (no momento 3.10), mas a depender do projeto voc\u00ea poder\u00e1 usar alguma 3.x, e at\u00e9 mesmo 2.x.","title":"Perguntas e Respostas"},{"location":"algoritmos_e_programa%C3%A7%C3%A3o/perguntas-e-respostas-python/#python-perguntas-e-respostas","text":"","title":"Python - Perguntas e Respostas"},{"location":"algoritmos_e_programa%C3%A7%C3%A3o/perguntas-e-respostas-python/#o-que-e-python","text":"\u00c9 uma linguagem de alto n\u00edvel, interpretada, interativa e orientada a objetos. Python foi projetado para ser leg\u00edvel. Ela usa palavras em ingl\u00eas frequentemente onde as outras linguagens do tipo C usam pontua\u00e7\u00e3o, e tem menos elementos sint\u00e1ticos.","title":"O que \u00e9 Python?"},{"location":"algoritmos_e_programa%C3%A7%C3%A3o/perguntas-e-respostas-python/#qual-o-nome-de-alguns-recursos-do-python","text":"Suporte a Orienta\u00e7\u00e3o a Objeto mas tamb\u00e9m a programa\u00e7\u00e3o procedural. pode ser usada como linguagem de script ou como c\u00f3digo compilado para aplica\u00e7\u00f5es maiores. Alto n\u00edvel de dinamismo da tipagem de dados e da checagem do tipo de dados. Coletor de lixo, mecanismo de limpar a mem\u00f3rio do programa, \u00e9 autom\u00e1tico, nativo da linguagem.","title":"Qual o nome de alguns recursos do Python?"},{"location":"algoritmos_e_programa%C3%A7%C3%A3o/perguntas-e-respostas-python/#qual-e-o-proposito-da-variavel-de-ambiente-pythonpath","text":"Tem um papel similar ao PATH. Essas vari\u00e1veis dizem ao Python onde locar os arquivos de m\u00f3dulos importados. Tamb\u00e9m deve incluir o diret\u00f3rio da biblioteca fonte e os diret\u00f3rios contendo o c\u00f3digo fonte do Python. PYTHONPATH \u00e9 pr\u00e9-configurado durante a instala\u00e7\u00e3o.","title":"Qual \u00e9 o prop\u00f3sito da vari\u00e1vel de ambiente PYTHONPATH ?"},{"location":"algoritmos_e_programa%C3%A7%C3%A3o/perguntas-e-respostas-python/#quais-sao-os-tipos-de-dados-mais-importantes-do-python","text":"Numbers , String, List, Tuple, Dictionary.","title":"Quais s\u00e3o os tipos de dados mais importantes do Python?"},{"location":"algoritmos_e_programa%C3%A7%C3%A3o/perguntas-e-respostas-python/#qual-a-diferenca-entre-listas-e-tuplas","text":"A principal diferen\u00e7a entre listas e tuplas est\u00e1 na sintaxe: listas usam \"[ ]\" e tuplas usam \"( )\". Outra import\u00e2ncia fundamental \u00e9 que tuplas s\u00e3o apenas dados de leitura, elas s\u00e3o inalter\u00e1veis.","title":"Qual a diferen\u00e7a entre listas e tuplas ?"},{"location":"algoritmos_e_programa%C3%A7%C3%A3o/perguntas-e-respostas-python/#o-que-sao-dicionarios-em-python","text":"\u00c9 um tipo de tabela hash. Dicion\u00e1rios trabalham como arrays associativos consistindo de pares de chave-valor. Uma chave ser\u00e1 um tipo de dado e um valor, por sua vez, pode ser um Objeto arbitr\u00e1rio.","title":"O que s\u00e3o dicion\u00e1rios em Python ?"},{"location":"algoritmos_e_programa%C3%A7%C3%A3o/perguntas-e-respostas-python/#como-criar-um-dicionario","text":"Dicion\u00e1rios s\u00e3o identificados por serem envolvidos com {} e a sintaxe \u00e9:","title":"Como criar um dicion\u00e1rio ?"},{"location":"algoritmos_e_programa%C3%A7%C3%A3o/perguntas-e-respostas-python/#como-acessar-chaves-de-um-dicionarios","text":"","title":"Como acessar chaves de um dicion\u00e1rios ?"},{"location":"algoritmos_e_programa%C3%A7%C3%A3o/perguntas-e-respostas-python/#como-converter-um-dado-tipo-string-para-do-tipo-int","text":"","title":"Como converter um dado tipo string para do tipo int ?"},{"location":"algoritmos_e_programa%C3%A7%C3%A3o/perguntas-e-respostas-python/#como-pegar-um-numero-ramdomico-dentro-de-um-certo-alcance","text":"","title":"Como pegar um n\u00famero ramd\u00f4mico dentro de um certo alcance?"},{"location":"algoritmos_e_programa%C3%A7%C3%A3o/perguntas-e-respostas-python/#como-checar-que-todos-os-caracteres-de-uma-string-sao-alfanumericos-ou-apenas-numericos","text":"","title":"Como checar que todos os caracteres de uma string s\u00e3o alfanum\u00e9ricos ou apenas num\u00e9ricos?"},{"location":"algoritmos_e_programa%C3%A7%C3%A3o/perguntas-e-respostas-python/#o-python-possui-um-compilador-proprio","text":"Sim, e n\u00e3o precisamos nos procupar com isso, pois o compilador do Pyhton \u00e9 autom\u00e1tico.","title":"O Python possui um compilador pr\u00f3prio ?"},{"location":"algoritmos_e_programa%C3%A7%C3%A3o/perguntas-e-respostas-python/#qual-versao-do-python-devo-usar","text":"Em ambiente de estudos/testes \u00e9 comum usar a vers\u00e3o mais recente (no momento 3.10), mas a depender do projeto voc\u00ea poder\u00e1 usar alguma 3.x, e at\u00e9 mesmo 2.x.","title":"Qual vers\u00e3o do Python devo usar ?"},{"location":"algoritmos_e_programa%C3%A7%C3%A3o/teste/","text":"Teste \u00b6 exemplioficando cria\u00e7\u00e3o de uma page para p o portal \u00b6 item 01 item 02 item 03 \ud83d\udc0d \u2615","title":"teste"},{"location":"algoritmos_e_programa%C3%A7%C3%A3o/teste/#teste","text":"","title":"Teste"},{"location":"algoritmos_e_programa%C3%A7%C3%A3o/teste/#exemplioficando-criacao-de-uma-page-para-p-o-portal","text":"item 01 item 02 item 03 \ud83d\udc0d \u2615","title":"exemplioficando cria\u00e7\u00e3o de uma page para p o portal"},{"location":"algoritmos_e_programa%C3%A7%C3%A3o/turtle/","text":"O M\u00f3dulo Turtle \u00b6 Turtle \u00e9 um m\u00f3dulo embutido (built-in) do Python que tem por objetivo ensinar programa\u00e7\u00e3o \u00e0 crian\u00e7as. Com este m\u00f3dulo temos essencialmente duas classes: Screen() e Turtle(). Aqui est\u00e3o alguns exemplos do que \u00e9 poss\u00edvel fazer com a Tartaruga. Estes exemplos foram retirados do Portal Acervo Lima , que por sua vez s\u00e3o tradu\u00e7\u00f5es do portal GeeksforGeeks . Todos exemplos est\u00e3o sob licen\u00e7a CreativeCommons . Confira aqui todos os c\u00f3digos comentados. Rel\u00f3gio Digital \u00b6 Arco-\u00edris \u00b6 Oct\u00f3gono \u00b6 Teia de aranha \u00b6 Gr\u00e1fico de Barras \u00b6 Estrela \u00b6 Smile \u00b6 Rel\u00f3gio \u00b6 Espir\u00f3grafo \u00b6","title":"Exemplos m\u00f3dulo Turtle"},{"location":"algoritmos_e_programa%C3%A7%C3%A3o/turtle/#o-modulo-turtle","text":"Turtle \u00e9 um m\u00f3dulo embutido (built-in) do Python que tem por objetivo ensinar programa\u00e7\u00e3o \u00e0 crian\u00e7as. Com este m\u00f3dulo temos essencialmente duas classes: Screen() e Turtle(). Aqui est\u00e3o alguns exemplos do que \u00e9 poss\u00edvel fazer com a Tartaruga. Estes exemplos foram retirados do Portal Acervo Lima , que por sua vez s\u00e3o tradu\u00e7\u00f5es do portal GeeksforGeeks . Todos exemplos est\u00e3o sob licen\u00e7a CreativeCommons . Confira aqui todos os c\u00f3digos comentados.","title":"O M\u00f3dulo Turtle"},{"location":"algoritmos_e_programa%C3%A7%C3%A3o/turtle/#relogio-digital","text":"","title":"Rel\u00f3gio Digital"},{"location":"algoritmos_e_programa%C3%A7%C3%A3o/turtle/#arco-iris","text":"","title":"Arco-\u00edris"},{"location":"algoritmos_e_programa%C3%A7%C3%A3o/turtle/#octogono","text":"","title":"Oct\u00f3gono"},{"location":"algoritmos_e_programa%C3%A7%C3%A3o/turtle/#teia-de-aranha","text":"","title":"Teia de aranha"},{"location":"algoritmos_e_programa%C3%A7%C3%A3o/turtle/#grafico-de-barras","text":"","title":"Gr\u00e1fico de Barras"},{"location":"algoritmos_e_programa%C3%A7%C3%A3o/turtle/#estrela","text":"","title":"Estrela"},{"location":"algoritmos_e_programa%C3%A7%C3%A3o/turtle/#smile","text":"","title":"Smile"},{"location":"algoritmos_e_programa%C3%A7%C3%A3o/turtle/#relogio","text":"","title":"Rel\u00f3gio"},{"location":"algoritmos_e_programa%C3%A7%C3%A3o/turtle/#espirografo","text":"","title":"Espir\u00f3grafo"},{"location":"banco_de_dados/ini/","text":"Banco de Dados \u00b6 Objetivos: Projetos e implementa\u00e7\u00f5es de bancos de dados. Ementa: Introdu\u00e7\u00e3o a banco de dados (Processamento de Arquivos vs SGBDs, arquitetura de SGBDs), modelagem de dados (conceitual, modelo entidade- relacionamento), Linguagem de Consulta e Manipula\u00e7\u00e3o de Dados (SQL), Indexa\u00e7\u00e3o, Bancos de Dados N\u00e3o Relacionais ou NoSQL (Bancos de Dados Orientados a Documentos, Bancos de Dados em Colunas, Bancos de Orientados a Grafos). Mapeamento objeto-relacional (ORM). Bibliografia Base: - Elmasri, Ramez; Navathe, Shamkant B. Sistema de Banco de Dados. 2018. Pearson. - DATE, C. J. Introdu\u00e7\u00e3o a Sistemas de Bancos de Dados. Rio de Janeiro: Elsevier, 2003. - ELMASRI, R.; NAVATHE, S. B. Sistemas de Banco de Dados. S\u00e3o Paulo: Pearson Addison Wesley, 2011. Bibliografia Complementar: - Sadalage, P. J., & Fowler, M. NoSQL distilled: a brief guide to the emerging world of polyglot persistence. 2013. Pearson Education. - Date, C. J. An introduction to database systems. 1981. Pearson Education India. - Neeraj, N. (2013). Mastering Apache Cassandra. Packt Publishing Ltd. - Banker, K. (2011). MongoDB in action. Manning Publications Co.","title":"inicio"},{"location":"banco_de_dados/ini/#banco-de-dados","text":"Objetivos: Projetos e implementa\u00e7\u00f5es de bancos de dados. Ementa: Introdu\u00e7\u00e3o a banco de dados (Processamento de Arquivos vs SGBDs, arquitetura de SGBDs), modelagem de dados (conceitual, modelo entidade- relacionamento), Linguagem de Consulta e Manipula\u00e7\u00e3o de Dados (SQL), Indexa\u00e7\u00e3o, Bancos de Dados N\u00e3o Relacionais ou NoSQL (Bancos de Dados Orientados a Documentos, Bancos de Dados em Colunas, Bancos de Orientados a Grafos). Mapeamento objeto-relacional (ORM). Bibliografia Base: - Elmasri, Ramez; Navathe, Shamkant B. Sistema de Banco de Dados. 2018. Pearson. - DATE, C. J. Introdu\u00e7\u00e3o a Sistemas de Bancos de Dados. Rio de Janeiro: Elsevier, 2003. - ELMASRI, R.; NAVATHE, S. B. Sistemas de Banco de Dados. S\u00e3o Paulo: Pearson Addison Wesley, 2011. Bibliografia Complementar: - Sadalage, P. J., & Fowler, M. NoSQL distilled: a brief guide to the emerging world of polyglot persistence. 2013. Pearson Education. - Date, C. J. An introduction to database systems. 1981. Pearson Education India. - Neeraj, N. (2013). Mastering Apache Cassandra. Packt Publishing Ltd. - Banker, K. (2011). MongoDB in action. Manning Publications Co.","title":"Banco de Dados"},{"location":"estrutura_dados/conceitosbasicos/","text":"Conceitos B\u00e1sicos C++ \u00b6 Criada como uma extens\u00e3o da linguagem C pelo dinamarqu\u00eas Bjarne Stroustrup, o \"C com classes\" \u00e9 uma linguagem multiparadigma, quase sempre implementada de modo compilado,considerada uma linguagem de n\u00edvel m\u00e9dio. Apareceu pela primeira vez em 1985 e ainda hoje \u00e9 amplamente utilizada em sistemas embarcados, jogos, bibliotecas gr\u00e1ficas, sistemas operacionais entre outros. Hello World em C++ \u00b6 #include <iostream> int main () { std :: cout << \"Hello, world! \\n \" ; } #include <iostream> : biblioteca utilizada para declarar objetos que realizam o controle do input e do output estabelecidos no c\u00f3digo. int main() : fun\u00e7\u00e3o utilizada para demonstrar o ponto de in\u00edcio de execu\u00e7\u00e3o do programa. std::cout << \"string\"; : fun\u00e7\u00e3o padr\u00e3o para enviar dados para o console imprimi-los em forma de texto. Tipos de Dados em C++ \u00b6 Bool: valores True or False, em geral armazenam 1 byte Char: aramazena um \u00fanico caracter tamb\u00e9m de um byte, como \"a\", ou \"b\" e assim por diante Int: utiliza 4 bytes e armazenam n\u00fameros inteiros entre -2.147.483.648 a 2.147.483.647 Double: 8 bytes de mem\u00f3ria e armazena n\u00fameros com menos de 15 casas decimais Float: 4 bytes de mem\u00f3ria e armazena n\u00fameros com menos de 06 casas decimais Palavras reservadas ao C++ \u00b6 Palavras reservadas s\u00e3o um conjunto de 92 palavras que s\u00e3o excluivas para uso do C++, entre elas podemos citar - - - - and or if for else do true false this int long case double char catch break const private return void Entre outras. Operadores em C++ \u00b6 Operadores em programa\u00e7\u00e3o \u00e9 um c\u00e1lculo matem\u00e1tico envolvendo zero ou mais valores que originam um novo valor. A opera\u00e7\u00e3o em espec\u00edfico \u00e9 determinado por um s\u00edmbolo (ou par de s\u00edmbolos) chamado operador . Adi\u00e7\u00e3o: + Subtra\u00e7\u00e3o: - Multiplica\u00e7\u00e3o: * Divis\u00e3o: / Atribui\u00e7\u00e3o: = Inser\u00e7\u00e3o: << Extra\u00e7\u00e3o: >> Igualdade: == M\u00f3dulo: % Fun\u00e7\u00f5es \u00b6 Refer\u00eancias \u00b6 Betrybe - C++ Wikipedia - C++ Learn C++","title":"Conceitos B\u00e1sicos"},{"location":"estrutura_dados/conceitosbasicos/#conceitos-basicos-c","text":"Criada como uma extens\u00e3o da linguagem C pelo dinamarqu\u00eas Bjarne Stroustrup, o \"C com classes\" \u00e9 uma linguagem multiparadigma, quase sempre implementada de modo compilado,considerada uma linguagem de n\u00edvel m\u00e9dio. Apareceu pela primeira vez em 1985 e ainda hoje \u00e9 amplamente utilizada em sistemas embarcados, jogos, bibliotecas gr\u00e1ficas, sistemas operacionais entre outros.","title":"Conceitos B\u00e1sicos C++"},{"location":"estrutura_dados/conceitosbasicos/#hello-world-em-c","text":"#include <iostream> int main () { std :: cout << \"Hello, world! \\n \" ; } #include <iostream> : biblioteca utilizada para declarar objetos que realizam o controle do input e do output estabelecidos no c\u00f3digo. int main() : fun\u00e7\u00e3o utilizada para demonstrar o ponto de in\u00edcio de execu\u00e7\u00e3o do programa. std::cout << \"string\"; : fun\u00e7\u00e3o padr\u00e3o para enviar dados para o console imprimi-los em forma de texto.","title":"Hello World em C++"},{"location":"estrutura_dados/conceitosbasicos/#tipos-de-dados-em-c","text":"Bool: valores True or False, em geral armazenam 1 byte Char: aramazena um \u00fanico caracter tamb\u00e9m de um byte, como \"a\", ou \"b\" e assim por diante Int: utiliza 4 bytes e armazenam n\u00fameros inteiros entre -2.147.483.648 a 2.147.483.647 Double: 8 bytes de mem\u00f3ria e armazena n\u00fameros com menos de 15 casas decimais Float: 4 bytes de mem\u00f3ria e armazena n\u00fameros com menos de 06 casas decimais","title":"Tipos de Dados em C++"},{"location":"estrutura_dados/conceitosbasicos/#palavras-reservadas-ao-c","text":"Palavras reservadas s\u00e3o um conjunto de 92 palavras que s\u00e3o excluivas para uso do C++, entre elas podemos citar - - - - and or if for else do true false this int long case double char catch break const private return void Entre outras.","title":"Palavras reservadas ao C++"},{"location":"estrutura_dados/conceitosbasicos/#operadores-em-c","text":"Operadores em programa\u00e7\u00e3o \u00e9 um c\u00e1lculo matem\u00e1tico envolvendo zero ou mais valores que originam um novo valor. A opera\u00e7\u00e3o em espec\u00edfico \u00e9 determinado por um s\u00edmbolo (ou par de s\u00edmbolos) chamado operador . Adi\u00e7\u00e3o: + Subtra\u00e7\u00e3o: - Multiplica\u00e7\u00e3o: * Divis\u00e3o: / Atribui\u00e7\u00e3o: = Inser\u00e7\u00e3o: << Extra\u00e7\u00e3o: >> Igualdade: == M\u00f3dulo: %","title":"Operadores em C++"},{"location":"estrutura_dados/conceitosbasicos/#funcoes","text":"","title":"Fun\u00e7\u00f5es"},{"location":"estrutura_dados/conceitosbasicos/#referencias","text":"Betrybe - C++ Wikipedia - C++ Learn C++","title":"Refer\u00eancias"},{"location":"estrutura_dados/est/","text":"Estruturas de Dados \u00b6 Objetivo: Familiarizar-se com a modelagem e implementa\u00e7\u00e3o de diferentes estruturas de dados, bem como os algoritmos para gerenci\u00e1-las. Objetivos: Familiarizar os alunos com a modelagem e implementa\u00e7\u00e3o de diferentes estruturas de dados, bem como os algoritmos para gerenci\u00e1-las. Ementa: Estruturas b\u00e1sicas para representa\u00e7\u00e3o de informa\u00e7\u00f5es: pilhas, filas e listas ligadas, \u00e1rvores, grafos, tabelas de hash e suas generaliza\u00e7\u00f5es, implementa\u00e7\u00f5es. Algoritmos para constru\u00e7\u00e3o, consulta e manipula\u00e7\u00e3o de tais estruturas. Desenvolvimento, implementa\u00e7\u00e3o e testes de programas usando tais estruturas em aplica\u00e7\u00f5es espec\u00edficas. Page-Rank Bibliografia Base: - SZWARCFITER, Jayme Luiz; MARKENZON, Lilian. Estruturas de Dados e Seus Algoritmos. 2010. LTC. - EDELWEISS, Nina; GALANTE, Renata. Estruturas de Dados. 2011. Bookman. - AGUILAR, Luis Joyanes. Fundamentos de Programa\u00e7\u00e3o: Algoritmos, estruturas de dados e objetos. 2008. AMGH. Bibliografia Complementar: - Cormen, Thomas; Leiserson, Charles; Rivest, Ronald; Stein, Clifford. Algoritmos: Teoria e Pr\u00e1tica. 2012. LTC. - Thomas, Cormen. Desmistificando Algoritmos. 2017. LTC. - Maner, Udi. Introduction to Algorithms: A Creative Approach. 1989. Addison- Wesley Professional.","title":"Dados"},{"location":"estrutura_dados/est/#estruturas-de-dados","text":"Objetivo: Familiarizar-se com a modelagem e implementa\u00e7\u00e3o de diferentes estruturas de dados, bem como os algoritmos para gerenci\u00e1-las. Objetivos: Familiarizar os alunos com a modelagem e implementa\u00e7\u00e3o de diferentes estruturas de dados, bem como os algoritmos para gerenci\u00e1-las. Ementa: Estruturas b\u00e1sicas para representa\u00e7\u00e3o de informa\u00e7\u00f5es: pilhas, filas e listas ligadas, \u00e1rvores, grafos, tabelas de hash e suas generaliza\u00e7\u00f5es, implementa\u00e7\u00f5es. Algoritmos para constru\u00e7\u00e3o, consulta e manipula\u00e7\u00e3o de tais estruturas. Desenvolvimento, implementa\u00e7\u00e3o e testes de programas usando tais estruturas em aplica\u00e7\u00f5es espec\u00edficas. Page-Rank Bibliografia Base: - SZWARCFITER, Jayme Luiz; MARKENZON, Lilian. Estruturas de Dados e Seus Algoritmos. 2010. LTC. - EDELWEISS, Nina; GALANTE, Renata. Estruturas de Dados. 2011. Bookman. - AGUILAR, Luis Joyanes. Fundamentos de Programa\u00e7\u00e3o: Algoritmos, estruturas de dados e objetos. 2008. AMGH. Bibliografia Complementar: - Cormen, Thomas; Leiserson, Charles; Rivest, Ronald; Stein, Clifford. Algoritmos: Teoria e Pr\u00e1tica. 2012. LTC. - Thomas, Cormen. Desmistificando Algoritmos. 2017. LTC. - Maner, Udi. Introduction to Algorithms: A Creative Approach. 1989. Addison- Wesley Professional.","title":"Estruturas de Dados"},{"location":"fundamentos_web/fund/","text":"Fundamentos de Internet e Web \u00b6 Objetivos: Apresentar no\u00e7\u00f5es de conhecimentos sobre a estrutura de documentos na WEB. Ementa: Apresentar no\u00e7\u00f5es de conhecimentos sobre a estrutura de documentos na WEB. Ementa: Hipertexto; origens de XML e HTML (SGML); Estrutura do conte\u00fado versus apar\u00eancia do documento; tags HTML b\u00e1sicas (H1, P, etc) e extens\u00edveis (div, span, etc); tags de HTML5; Atributos b\u00e1sicos de CSS (color, text-align, etc), seletores CSS; formul\u00e1rios HTML; no\u00e7\u00f5es de manipula\u00e7\u00e3o program\u00e1tica do DOM. Bibliografia Base: - MILETTO, Evandro Manara; BERTAGNOLLI, Silvia de Castro. Desenvolvimento de Software II: Introdu\u00e7\u00e3o ao Desenvolvimento Web com HTML, CSS, JavaScript e PHP. 2014. Bookman. - TERUEL, Evandro Carlos. HTML 5 - Guia Pr\u00e1tico. 2014. \u00c9rica. - Flatschart, F\u00e1bio. HTML 5 Embarque Imediato. 2011. Brasport. Bibliografia Complementar: - FREEMAN, Elisabeth, FREEMAN, Eric. Use a cabe\u00e7a! HTML e CSS. 2015. Alta Books. - Duckett, Jon. HTML e CSS projete e construa Websites. 2016. Alta Books.","title":"Ementa"},{"location":"fundamentos_web/fund/#fundamentos-de-internet-e-web","text":"Objetivos: Apresentar no\u00e7\u00f5es de conhecimentos sobre a estrutura de documentos na WEB. Ementa: Apresentar no\u00e7\u00f5es de conhecimentos sobre a estrutura de documentos na WEB. Ementa: Hipertexto; origens de XML e HTML (SGML); Estrutura do conte\u00fado versus apar\u00eancia do documento; tags HTML b\u00e1sicas (H1, P, etc) e extens\u00edveis (div, span, etc); tags de HTML5; Atributos b\u00e1sicos de CSS (color, text-align, etc), seletores CSS; formul\u00e1rios HTML; no\u00e7\u00f5es de manipula\u00e7\u00e3o program\u00e1tica do DOM. Bibliografia Base: - MILETTO, Evandro Manara; BERTAGNOLLI, Silvia de Castro. Desenvolvimento de Software II: Introdu\u00e7\u00e3o ao Desenvolvimento Web com HTML, CSS, JavaScript e PHP. 2014. Bookman. - TERUEL, Evandro Carlos. HTML 5 - Guia Pr\u00e1tico. 2014. \u00c9rica. - Flatschart, F\u00e1bio. HTML 5 Embarque Imediato. 2011. Brasport. Bibliografia Complementar: - FREEMAN, Elisabeth, FREEMAN, Eric. Use a cabe\u00e7a! HTML e CSS. 2015. Alta Books. - Duckett, Jon. HTML e CSS projete e construa Websites. 2016. Alta Books.","title":"Fundamentos de Internet e Web"},{"location":"fundamentos_web/glossario-web/","text":"Gloss\u00e1rio Fundamentos Web \u00b6 Internet \u00b6 Sistema global de redes interconectadas que usam o Protocolo da Internet (TCP/IP) para se comunicar entre dispositivos. Web 1.0 - Apenas Leitura \u00b6 Sistema de informa\u00e7\u00e3o interligado por hipertextos que que permitiam a leitura por parte do usu\u00e1rio. Web 2.0 - Leitura e Escrita \u00b6 Surgem linguagens de programa\u00e7\u00e3o para Web: JavaScript, PHP que permitem a celebra\u00e7\u00e3o de neg\u00f3cios empresariais; era do com\u00e9rcio eletr\u00f4nico; Leitura e a escrita de simult\u00e2nea de dados. Web 3.0 - Web Sem\u00e2ntica \u00b6 Processamento significativa das informa\u00e7\u00f5es, tecnologias de personaliza\u00e7\u00e3o; HTML5 e CSS3. Web 4.0 - Internet das Coisas \u00b6 Uso de intelig\u00eancia artificial, aparelhos interconectados(de carros a geladeiras), simbiose da atividade humana com a da m\u00e1quina. A Web 4.0 ainda n\u00e3o se encontre bem definida. W3 Consortium \u00b6 \u00c9 a principal organiza\u00e7\u00e3o de padroniza\u00e7\u00e3o da World Wide Web. Consiste em um cons\u00f3rcio internacional com 450 membros com a finalidade de estabelecer padr\u00f5es para a cria\u00e7\u00e3o e a interpreta\u00e7\u00e3o de conte\u00fados para a Web. IP - Internet Protocol \u00b6 Protocolo da Internet : \u00e9 um protocolo de comunica\u00e7\u00e3o usado entre todas as m\u00e1quinas em rede para encaminhamento dos dados, exemplo: 200.20.15.22 . DNS - Domain Name System \u00b6 Sistema de Nomes de Dom\u00ednios : \u00e9 um sistema hier\u00e1rquico e distribu\u00eddo de gest\u00e3o de nomes para computadores, servi\u00e7os ou qualquer m\u00e1quina conectada \u00e0 Internet ou a uma rede privada. HTTP - Hypertext Tranfer Protocol \u00b6 Protocolo de Transfer\u00eancia de Hipertexto : \u00e9 um protocolo de comunica\u00e7\u00e3o utilizado para sistemas de informa\u00e7\u00e3o de hiperm\u00eddia, distribu\u00eddos e colaborativos. FTP - File Transfer Protocol \u00b6 Protocolo de Transfer\u00eancia de Arquivos: um padr\u00e3o usado para transferir arquivos entre servidor e cliente. Web Server \u00b6 \u00c9 o software respons\u00e1vel por aceitar uma requisi\u00e7\u00e3o via HTTP. Apache e Nginx s\u00e3o um dos servidores web mais populares. Web Client/Browser \u00b6 \u00c9 o software que faz a requisi\u00e7\u00e3o de conte\u00fado da Web a um servidor; que armazena exibe o conte\u00fado do servidor na tela de cliente, usando o HTTP. URI - Uniform Resource Identifier \u00b6 Identificador Uniforme de Recursos : sequ\u00eancia \u00fanica de caracteres que identificam um endere\u00e7o l\u00f3gico ou f\u00edsico usado por tecnologias Web. URL - Uniform Resource Locator \u00b6 Lozalizador Uniforme de Recursos : \u00e9 uma refer\u00eancia coloquial ao recurso da Web que especifica um endere\u00e7o. Exemplo: http://www.example.com/index.html . Requisi\u00e7\u00f5es HTTP \u00b6 Por padr\u00e3o \u00e9 dividida em tr\u00eas partes: Linha da requisi\u00e7\u00e3o : informa o m\u00e9todo da requisi\u00e7\u00e3o, o recurso e a vers\u00e3o do HTTP. Linhas de cabe\u00e7alhos : inclui informa\u00e7\u00f5es complementares sobre a requisi\u00e7\u00e3o no formato campo e valor. Corpo da entidade :dados adicionais (arquivos, formul\u00e1rios). HTML \u00b6 HyperText Markup Language \u00e9 a linguagem padr\u00e3o dos docuentos que cirvulam na web atrav\u00e9s dos protocolos HTTP. \u00c9 u documento leve que se organiza em tags. CSS \u00b6 Cascading Style Sheet \u00e9 a linguagem usada para apresenta\u00e7\u00e3o do documento HTML. Com ela \u00e9 poss\u00edvel editar o layout, as cores e fontes, etc. Refer\u00eancias \u00b6 https://www.wikipedia.org https://pt.wikipedia.org/ Desconstruindo a Web - William Molinari","title":"Gloss\u00e1rio Web"},{"location":"fundamentos_web/glossario-web/#glossario-fundamentos-web","text":"","title":"Gloss\u00e1rio Fundamentos Web"},{"location":"fundamentos_web/glossario-web/#internet","text":"Sistema global de redes interconectadas que usam o Protocolo da Internet (TCP/IP) para se comunicar entre dispositivos.","title":"Internet"},{"location":"fundamentos_web/glossario-web/#web-10-apenas-leitura","text":"Sistema de informa\u00e7\u00e3o interligado por hipertextos que que permitiam a leitura por parte do usu\u00e1rio.","title":"Web 1.0 - Apenas Leitura"},{"location":"fundamentos_web/glossario-web/#web-20-leitura-e-escrita","text":"Surgem linguagens de programa\u00e7\u00e3o para Web: JavaScript, PHP que permitem a celebra\u00e7\u00e3o de neg\u00f3cios empresariais; era do com\u00e9rcio eletr\u00f4nico; Leitura e a escrita de simult\u00e2nea de dados.","title":"Web 2.0 - Leitura e Escrita"},{"location":"fundamentos_web/glossario-web/#web-30-web-semantica","text":"Processamento significativa das informa\u00e7\u00f5es, tecnologias de personaliza\u00e7\u00e3o; HTML5 e CSS3.","title":"Web 3.0 - Web Sem\u00e2ntica"},{"location":"fundamentos_web/glossario-web/#web-40-internet-das-coisas","text":"Uso de intelig\u00eancia artificial, aparelhos interconectados(de carros a geladeiras), simbiose da atividade humana com a da m\u00e1quina. A Web 4.0 ainda n\u00e3o se encontre bem definida.","title":"Web 4.0 - Internet das Coisas"},{"location":"fundamentos_web/glossario-web/#w3-consortium","text":"\u00c9 a principal organiza\u00e7\u00e3o de padroniza\u00e7\u00e3o da World Wide Web. Consiste em um cons\u00f3rcio internacional com 450 membros com a finalidade de estabelecer padr\u00f5es para a cria\u00e7\u00e3o e a interpreta\u00e7\u00e3o de conte\u00fados para a Web.","title":"W3 Consortium"},{"location":"fundamentos_web/glossario-web/#ip-internet-protocol","text":"Protocolo da Internet : \u00e9 um protocolo de comunica\u00e7\u00e3o usado entre todas as m\u00e1quinas em rede para encaminhamento dos dados, exemplo: 200.20.15.22 .","title":"IP - Internet Protocol"},{"location":"fundamentos_web/glossario-web/#dns-domain-name-system","text":"Sistema de Nomes de Dom\u00ednios : \u00e9 um sistema hier\u00e1rquico e distribu\u00eddo de gest\u00e3o de nomes para computadores, servi\u00e7os ou qualquer m\u00e1quina conectada \u00e0 Internet ou a uma rede privada.","title":"DNS - Domain Name System"},{"location":"fundamentos_web/glossario-web/#http-hypertext-tranfer-protocol","text":"Protocolo de Transfer\u00eancia de Hipertexto : \u00e9 um protocolo de comunica\u00e7\u00e3o utilizado para sistemas de informa\u00e7\u00e3o de hiperm\u00eddia, distribu\u00eddos e colaborativos.","title":"HTTP - Hypertext Tranfer Protocol"},{"location":"fundamentos_web/glossario-web/#ftp-file-transfer-protocol","text":"Protocolo de Transfer\u00eancia de Arquivos: um padr\u00e3o usado para transferir arquivos entre servidor e cliente.","title":"FTP - File Transfer Protocol"},{"location":"fundamentos_web/glossario-web/#web-server","text":"\u00c9 o software respons\u00e1vel por aceitar uma requisi\u00e7\u00e3o via HTTP. Apache e Nginx s\u00e3o um dos servidores web mais populares.","title":"Web Server"},{"location":"fundamentos_web/glossario-web/#web-clientbrowser","text":"\u00c9 o software que faz a requisi\u00e7\u00e3o de conte\u00fado da Web a um servidor; que armazena exibe o conte\u00fado do servidor na tela de cliente, usando o HTTP.","title":"Web Client/Browser"},{"location":"fundamentos_web/glossario-web/#uri-uniform-resource-identifier","text":"Identificador Uniforme de Recursos : sequ\u00eancia \u00fanica de caracteres que identificam um endere\u00e7o l\u00f3gico ou f\u00edsico usado por tecnologias Web.","title":"URI - Uniform Resource Identifier"},{"location":"fundamentos_web/glossario-web/#url-uniform-resource-locator","text":"Lozalizador Uniforme de Recursos : \u00e9 uma refer\u00eancia coloquial ao recurso da Web que especifica um endere\u00e7o. Exemplo: http://www.example.com/index.html .","title":"URL - Uniform Resource Locator"},{"location":"fundamentos_web/glossario-web/#requisicoes-http","text":"Por padr\u00e3o \u00e9 dividida em tr\u00eas partes: Linha da requisi\u00e7\u00e3o : informa o m\u00e9todo da requisi\u00e7\u00e3o, o recurso e a vers\u00e3o do HTTP. Linhas de cabe\u00e7alhos : inclui informa\u00e7\u00f5es complementares sobre a requisi\u00e7\u00e3o no formato campo e valor. Corpo da entidade :dados adicionais (arquivos, formul\u00e1rios).","title":"Requisi\u00e7\u00f5es HTTP"},{"location":"fundamentos_web/glossario-web/#html","text":"HyperText Markup Language \u00e9 a linguagem padr\u00e3o dos docuentos que cirvulam na web atrav\u00e9s dos protocolos HTTP. \u00c9 u documento leve que se organiza em tags.","title":"HTML"},{"location":"fundamentos_web/glossario-web/#css","text":"Cascading Style Sheet \u00e9 a linguagem usada para apresenta\u00e7\u00e3o do documento HTML. Com ela \u00e9 poss\u00edvel editar o layout, as cores e fontes, etc.","title":"CSS"},{"location":"fundamentos_web/glossario-web/#referencias","text":"https://www.wikipedia.org https://pt.wikipedia.org/ Desconstruindo a Web - William Molinari","title":"Refer\u00eancias"},{"location":"fundamentos_web/guias-tutoriais-etc/","text":"Guias, Tutoriais e Refer\u00eancias para os fundamentos da Web \u00b6 Lista composta de materiais diretamente relacionados aos Fundamentos da Web. \u00b6 Ajude-nos a construir essa lista: d\u00ea suas sugest\u00f5es! \u00b6 Refer\u00eancias \u00b6 Cons\u00f3rcio World Wide Web (pt-BR) IETF - Internet Engineering Task Force (en) W3 Schools (pt-BR) HTTP - mdn web docs (pt-BR) Vocabul\u00e1rio para microdata (en) Can I Use? - site para verificar suporte dos brownsers a tecnologias web. Tutoriais \u00b6 Learn to Code HTML & CSS (en) CSS Reference (en) CSS Basics (en) Semantic HTML (en) Diversos \u00b6 Os personagens do Simpsons desenhados com CSS puro Unsplash - Imagens de uso livre Figma - Software de design Font Awesome - \u00edcones de uso gratuito Fonts Google - fontes de uso gratuito Gradientes prontos Outros gradientes Exemplos de layouts para se inspirar Web Skills - habilidades Web Origamid - Flex Box CSS Tricks HTTP Cats - um jeito fofinho de entender Status HTTP","title":"Guias, Tutoriais, etc."},{"location":"fundamentos_web/guias-tutoriais-etc/#guias-tutoriais-e-referencias-para-os-fundamentos-da-web","text":"","title":"Guias, Tutoriais e Refer\u00eancias para os fundamentos da Web"},{"location":"fundamentos_web/guias-tutoriais-etc/#lista-composta-de-materiais-diretamente-relacionados-aos-fundamentos-da-web","text":"","title":"Lista composta de materiais diretamente relacionados aos Fundamentos da Web."},{"location":"fundamentos_web/guias-tutoriais-etc/#ajude-nos-a-construir-essa-lista-de-suas-sugestoes","text":"","title":"Ajude-nos a construir essa lista: d\u00ea suas sugest\u00f5es!"},{"location":"fundamentos_web/guias-tutoriais-etc/#referencias","text":"Cons\u00f3rcio World Wide Web (pt-BR) IETF - Internet Engineering Task Force (en) W3 Schools (pt-BR) HTTP - mdn web docs (pt-BR) Vocabul\u00e1rio para microdata (en) Can I Use? - site para verificar suporte dos brownsers a tecnologias web.","title":"Refer\u00eancias"},{"location":"fundamentos_web/guias-tutoriais-etc/#tutoriais","text":"Learn to Code HTML & CSS (en) CSS Reference (en) CSS Basics (en) Semantic HTML (en)","title":"Tutoriais"},{"location":"fundamentos_web/guias-tutoriais-etc/#diversos","text":"Os personagens do Simpsons desenhados com CSS puro Unsplash - Imagens de uso livre Figma - Software de design Font Awesome - \u00edcones de uso gratuito Fonts Google - fontes de uso gratuito Gradientes prontos Outros gradientes Exemplos de layouts para se inspirar Web Skills - habilidades Web Origamid - Flex Box CSS Tricks HTTP Cats - um jeito fofinho de entender Status HTTP","title":"Diversos"},{"location":"fundamentos_web/html-basico/","text":"Organiza\u00e7\u00e3o em Tags \u00b6 <!DOCTYPE> < html > < head > </ head > < body > < h1 > Aqui temos um t\u00edtutlo H1 </ h1 > < p > E aqui temos um par\u00e1grafo. </ p > </ body > </ html > O documento HTML por padr\u00e3o sempre come\u00e7a com a tag < !DOCTYPE > . A tag < html > identifica o formato do documento e cont\u00e9m todas as outras tags do documento. A < head > \u00e9 a tag que guarda metadados. Seu conte\u00fado n\u00e3o \u00e9 exibido, a n\u00e3o ser no t\u00edtulo do documento, que ser\u00e1 exibido na aba pelo navegador. O < body > \u00e9 o local onde tudo o que for sendo inserido ser\u00e1 exibido na tela principal do navegador. Dentro do body colocamos todas as outras tags que ir\u00e3o compor o documento como: main, header, navbar, aside, forms, footer. Recursos do HTML \u00b6 Uma linguagem f\u00e1cil e simples, pode ser facilmente entendida e rapidamente praticada. F\u00e1cil de fazer documentos impactantes, devido a suass tags sem\u00e2nticas. \u00c9 uma linguagem de marca\u00e7\u00e3o, logo, ela proporciona um design flex\u00edvel. Facilita nossa vida ao nos permitir criar qualquer tipo de link dentro da p\u00e1gina. N\u00e3o depende de plataforma: roda no Windows, Mac, Linux, qualquer smartphone. \u00c9 um grande mundo multim\u00eddia: \u00e9 poss\u00edvel colocar gr\u00e1ficos, v\u00eddeos e sons! Novos Recursos do HTML 5 \u00b6 Novos elementos sem\u00e2nticos! Forms 2.0 - Novos atributos e melhorias para a tag < input > . WebSocket - Uma nova gera\u00e7\u00e3o bidirecional de comunica\u00e7\u00e3o para tecnologias web. Canvas - Permite desenho bidimensional utilizando JavaScript. Audio e V\u00eddeo - Agora isso j\u00e1 vem nativo no HTML, n\u00e3o precisa de terceiros. Server-Sent Events - Permite toda a ind\u00fastria de streaming. Geolocaliza\u00e7\u00e3o - Os visitantes podem decidir compartilhar a geolocaliza\u00e7\u00e3o com a aplica\u00e7\u00e3o web. Drag and drop - Arrastar e jogar, fun\u00e7\u00e3o que permite um jeito interativo de manipular arquivos. Microdata - Permite que o autor customize seus pr\u00f3prio elementos sem\u00e2ntico, rela\u00e7\u00e3o entre item <-> propriedades. Encodando caracteres \u00b6 Os autores do documento devem informar o metadado de charset no in\u00edcio do documento: <!DOCTYPE html> < html lang = \"pt-BR\" > <!-- define o idioma do documento --> < head > < meta charset = \"UTF-8\" > <!-- define o tipo de letra do documento --> < title > T\u00edtulo </ title > </ head > Linkando arquivo CSS \u00b6 Para fazer liga\u00e7\u00e3o com um arquivo CSS, ainda dentro da tag < head > abra uma tag < link > : < html > < title > T\u00edtulo </ title > < link rel = \"stylesheet\" href = \"style.css\" > <!--linkando CSS --> </ html > Fazendo conex\u00e3o com um arquivo javaScript \u00b6 Mediante a tag < script > . < html > < script src = \"js/meuscript.js\" > </ script > </ html > Com essas informa\u00e7\u00f5es voc\u00ea j\u00e1 tem seu documento HTML pronto para uso. Saiba mais: \u00b6 W3 Schools MDN Web Docs Principais Tags O que \u00e9 a Web Sem\u00e2ntica","title":"Fundamentos HTML"},{"location":"fundamentos_web/html-basico/#organizacao-em-tags","text":"<!DOCTYPE> < html > < head > </ head > < body > < h1 > Aqui temos um t\u00edtutlo H1 </ h1 > < p > E aqui temos um par\u00e1grafo. </ p > </ body > </ html > O documento HTML por padr\u00e3o sempre come\u00e7a com a tag < !DOCTYPE > . A tag < html > identifica o formato do documento e cont\u00e9m todas as outras tags do documento. A < head > \u00e9 a tag que guarda metadados. Seu conte\u00fado n\u00e3o \u00e9 exibido, a n\u00e3o ser no t\u00edtulo do documento, que ser\u00e1 exibido na aba pelo navegador. O < body > \u00e9 o local onde tudo o que for sendo inserido ser\u00e1 exibido na tela principal do navegador. Dentro do body colocamos todas as outras tags que ir\u00e3o compor o documento como: main, header, navbar, aside, forms, footer.","title":"Organiza\u00e7\u00e3o em Tags"},{"location":"fundamentos_web/html-basico/#recursos-do-html","text":"Uma linguagem f\u00e1cil e simples, pode ser facilmente entendida e rapidamente praticada. F\u00e1cil de fazer documentos impactantes, devido a suass tags sem\u00e2nticas. \u00c9 uma linguagem de marca\u00e7\u00e3o, logo, ela proporciona um design flex\u00edvel. Facilita nossa vida ao nos permitir criar qualquer tipo de link dentro da p\u00e1gina. N\u00e3o depende de plataforma: roda no Windows, Mac, Linux, qualquer smartphone. \u00c9 um grande mundo multim\u00eddia: \u00e9 poss\u00edvel colocar gr\u00e1ficos, v\u00eddeos e sons!","title":"Recursos do HTML"},{"location":"fundamentos_web/html-basico/#novos-recursos-do-html-5","text":"Novos elementos sem\u00e2nticos! Forms 2.0 - Novos atributos e melhorias para a tag < input > . WebSocket - Uma nova gera\u00e7\u00e3o bidirecional de comunica\u00e7\u00e3o para tecnologias web. Canvas - Permite desenho bidimensional utilizando JavaScript. Audio e V\u00eddeo - Agora isso j\u00e1 vem nativo no HTML, n\u00e3o precisa de terceiros. Server-Sent Events - Permite toda a ind\u00fastria de streaming. Geolocaliza\u00e7\u00e3o - Os visitantes podem decidir compartilhar a geolocaliza\u00e7\u00e3o com a aplica\u00e7\u00e3o web. Drag and drop - Arrastar e jogar, fun\u00e7\u00e3o que permite um jeito interativo de manipular arquivos. Microdata - Permite que o autor customize seus pr\u00f3prio elementos sem\u00e2ntico, rela\u00e7\u00e3o entre item <-> propriedades.","title":"Novos Recursos do HTML 5"},{"location":"fundamentos_web/html-basico/#encodando-caracteres","text":"Os autores do documento devem informar o metadado de charset no in\u00edcio do documento: <!DOCTYPE html> < html lang = \"pt-BR\" > <!-- define o idioma do documento --> < head > < meta charset = \"UTF-8\" > <!-- define o tipo de letra do documento --> < title > T\u00edtulo </ title > </ head >","title":"Encodando caracteres"},{"location":"fundamentos_web/html-basico/#linkando-arquivo-css","text":"Para fazer liga\u00e7\u00e3o com um arquivo CSS, ainda dentro da tag < head > abra uma tag < link > : < html > < title > T\u00edtulo </ title > < link rel = \"stylesheet\" href = \"style.css\" > <!--linkando CSS --> </ html >","title":"Linkando arquivo CSS"},{"location":"fundamentos_web/html-basico/#fazendo-conexao-com-um-arquivo-javascript","text":"Mediante a tag < script > . < html > < script src = \"js/meuscript.js\" > </ script > </ html > Com essas informa\u00e7\u00f5es voc\u00ea j\u00e1 tem seu documento HTML pronto para uso.","title":"Fazendo conex\u00e3o com um arquivo javaScript"},{"location":"fundamentos_web/html-basico/#saiba-mais","text":"W3 Schools MDN Web Docs Principais Tags O que \u00e9 a Web Sem\u00e2ntica","title":"Saiba mais:"},{"location":"rede/Mais%20sobre%20conex%C3%B5es/","text":"Agora que voc\u00ea sabe o que \u00e9 uma rede e como ela \u00e9 composta, vamos fazer um projeto simples de rede: A conex\u00e3o entre dois computadores \u00b6 Para isso vamos usar dois aparelhos conectados a internet, como n\u00e3o sei como voc\u00ea est\u00e1 acessando esse material, vou usar um computador e um aparelho android. Esse teste pode ser feito usando tanto android - android ou PC - PC. Basta que ambos esteja conectados na internet. Vamos precisar tamb\u00e9m do numero IP dos aparelhos. Meu computador tem o IP: 192.168.1.21 , e o do meu celular android \u00e9 192.168.1.3 Agora vai no seu terminal e use o ping para se comunicar com o outro dispositivo. ping 192.168.1.3 Para finalizar o ping digite ctrl+c ou feche o terminal. E ele vai retorna: PING 192.168.1.3 (192.168.1.3) 56(84) bytes de dados. 64 bytes de 192.168.1.3: icmp_seq=1 ttl=64 tempo=112 ms 64 bytes de 192.168.1.3: icmp_seq=2 ttl=64 tempo=35.3 ms 64 bytes de 192.168.1.3: icmp_seq=3 ttl=64 tempo=53.8 ms 64 bytes de 192.168.1.3: icmp_seq=4 ttl=64 tempo=77.2 ms Agora se voc\u00ea n\u00e3o tem acesso a outro dispositivo, tenho uma solu\u00e7\u00e3o. Va l\u00e1 no seu terminal e digite: ping 127.0.0.1 Este tipo de endere\u00e7amento chamamos de loopback, em que ele enviar\u00e1 a informa\u00e7\u00e3o para ele mesmo para verificar se est\u00e1 tudo funcionando nesta transmiss\u00e3o interna. Lembrando que os endere\u00e7os que come\u00e7am com 127 s\u00e3o reservados para o loopback. Tamb\u00e9m \u00e9 possivel usar o localhost no lugar do numero IP para realizar o loopback. ping localhost Para pesquisar: \u00b6 Hub : \u00e9 um equipamento utilizado para interconectar diversos dispositivos finais. NAT \u00e9 um m\u00e9todo de tradu\u00e7\u00e3o de endere\u00e7os privados e p\u00fablicos. Servidor \u00e9 uma m\u00e1quina centralizada que oferece servi\u00e7os a um cliente (ex: computador) M\u00e1scara de rede \u00e9 usado para determinar se dois equipamentos est\u00e3o na mesma rede Protocolos \u00b6 Os protocolos em redes de telecomunica\u00e7\u00f5es seguem uma hierarquia e cada um \u00e9 respons\u00e1vel por determinada fun\u00e7\u00e3o na comunica\u00e7\u00e3o. Apesar de a tecnologia ter atingido um ponto importante nos protocolos e na sua seguran\u00e7a nem sempre foi assim e dessa forma, foi criado um modelo que tinha como intuito padronizar o desenvolvimento de hardware e software dos mais variados tipos de fabricantes para que pudessem assim se comunicar, mesmo que um tivesse alguns recursos a mais que o do outro fabricante, a comunica\u00e7\u00e3o deveria ser estabelecida. Para isso, foi definido que esses protocolos de comunica\u00e7\u00e3o seriam divididos em 7 camadas de comunica\u00e7\u00e3o, o chamado modelo OSI (Open System Interconnection) . O protocolo TCP por exemplo, encontra-se na camada 4 que \u00e9 conhecida como camada de transporte, o protocolo IP encontra-se na camada 3 que \u00e9 conhecida como camada de rede. A parte de protocolos \u00e9 um assunto muito vasto e sugiro que fa\u00e7a uma pesquisa sobre o modelo OSI e os principais protocolos que temos em cada camada. Links uteis para continuar a aprender sobre redes \u00b6 Para iniciar com os estudos em rede: Recomendo o conte\u00fado do Professor Guanabara que est\u00e1 disponivel no youtube Para se aprofundar com os estudos em rede: Recomendo o conte\u00fado do Hardware Redes Brasil qie est\u00e1 disponivel no youtube","title":"Um pouco mais sobre Rede"},{"location":"rede/Mais%20sobre%20conex%C3%B5es/#agora-que-voce-sabe-o-que-e-uma-rede-e-como-ela-e-composta-vamos-fazer-um-projeto-simples-de-rede-a-conexao-entre-dois-computadores","text":"Para isso vamos usar dois aparelhos conectados a internet, como n\u00e3o sei como voc\u00ea est\u00e1 acessando esse material, vou usar um computador e um aparelho android. Esse teste pode ser feito usando tanto android - android ou PC - PC. Basta que ambos esteja conectados na internet. Vamos precisar tamb\u00e9m do numero IP dos aparelhos. Meu computador tem o IP: 192.168.1.21 , e o do meu celular android \u00e9 192.168.1.3 Agora vai no seu terminal e use o ping para se comunicar com o outro dispositivo. ping 192.168.1.3 Para finalizar o ping digite ctrl+c ou feche o terminal. E ele vai retorna: PING 192.168.1.3 (192.168.1.3) 56(84) bytes de dados. 64 bytes de 192.168.1.3: icmp_seq=1 ttl=64 tempo=112 ms 64 bytes de 192.168.1.3: icmp_seq=2 ttl=64 tempo=35.3 ms 64 bytes de 192.168.1.3: icmp_seq=3 ttl=64 tempo=53.8 ms 64 bytes de 192.168.1.3: icmp_seq=4 ttl=64 tempo=77.2 ms Agora se voc\u00ea n\u00e3o tem acesso a outro dispositivo, tenho uma solu\u00e7\u00e3o. Va l\u00e1 no seu terminal e digite: ping 127.0.0.1 Este tipo de endere\u00e7amento chamamos de loopback, em que ele enviar\u00e1 a informa\u00e7\u00e3o para ele mesmo para verificar se est\u00e1 tudo funcionando nesta transmiss\u00e3o interna. Lembrando que os endere\u00e7os que come\u00e7am com 127 s\u00e3o reservados para o loopback. Tamb\u00e9m \u00e9 possivel usar o localhost no lugar do numero IP para realizar o loopback. ping localhost","title":"Agora que voc\u00ea sabe o que \u00e9 uma rede e como ela \u00e9 composta, vamos fazer um projeto simples de rede: A conex\u00e3o entre dois computadores"},{"location":"rede/Mais%20sobre%20conex%C3%B5es/#para-pesquisar","text":"Hub : \u00e9 um equipamento utilizado para interconectar diversos dispositivos finais. NAT \u00e9 um m\u00e9todo de tradu\u00e7\u00e3o de endere\u00e7os privados e p\u00fablicos. Servidor \u00e9 uma m\u00e1quina centralizada que oferece servi\u00e7os a um cliente (ex: computador) M\u00e1scara de rede \u00e9 usado para determinar se dois equipamentos est\u00e3o na mesma rede","title":"Para pesquisar:"},{"location":"rede/Mais%20sobre%20conex%C3%B5es/#protocolos","text":"Os protocolos em redes de telecomunica\u00e7\u00f5es seguem uma hierarquia e cada um \u00e9 respons\u00e1vel por determinada fun\u00e7\u00e3o na comunica\u00e7\u00e3o. Apesar de a tecnologia ter atingido um ponto importante nos protocolos e na sua seguran\u00e7a nem sempre foi assim e dessa forma, foi criado um modelo que tinha como intuito padronizar o desenvolvimento de hardware e software dos mais variados tipos de fabricantes para que pudessem assim se comunicar, mesmo que um tivesse alguns recursos a mais que o do outro fabricante, a comunica\u00e7\u00e3o deveria ser estabelecida. Para isso, foi definido que esses protocolos de comunica\u00e7\u00e3o seriam divididos em 7 camadas de comunica\u00e7\u00e3o, o chamado modelo OSI (Open System Interconnection) . O protocolo TCP por exemplo, encontra-se na camada 4 que \u00e9 conhecida como camada de transporte, o protocolo IP encontra-se na camada 3 que \u00e9 conhecida como camada de rede. A parte de protocolos \u00e9 um assunto muito vasto e sugiro que fa\u00e7a uma pesquisa sobre o modelo OSI e os principais protocolos que temos em cada camada.","title":"Protocolos"},{"location":"rede/Mais%20sobre%20conex%C3%B5es/#links-uteis-para-continuar-a-aprender-sobre-redes","text":"Para iniciar com os estudos em rede: Recomendo o conte\u00fado do Professor Guanabara que est\u00e1 disponivel no youtube Para se aprofundar com os estudos em rede: Recomendo o conte\u00fado do Hardware Redes Brasil qie est\u00e1 disponivel no youtube","title":"Links uteis para continuar a aprender sobre redes"},{"location":"rede/O%20que%20%C3%A9%20Rede%3F/","text":"Para iniciar vamos nos perguntar, o que \u00e9 a rede? \u00b6 Em termos mais simples, uma rede consiste em dois ou mais computadores que est\u00e3o conectados para compartilhar informa\u00e7\u00f5es. Todas as redes, n\u00e3o importa qu\u00e3o complexas sejam, baseiam se neste principio simples. Embora isto possa parecer como uma id\u00e9ia basica, o conceito foi uma grande conquista na \u00e1rea das comunica\u00e7\u00f5es, ou seja, desde um ambiente dom\u00e9stico, em que temos dois computadores e uma impressora, at\u00e9 grandes corpora\u00e7\u00f5es com centenas de usu\u00e1rios, m\u00e1quinas potentes com servidores, at\u00e9 a mais famosa, a internet. Endere\u00e7o de IP, como chegar l\u00e1? \u00b6 Vamos lembrar como era alguns anos atr\u00e1s quando ainda envi\u00e1vamos cartas: era necessario uma carta com o destinario e o endere\u00e7o para que o carteiro saber aonde devia entregar a carta. No mundo da internet, o processo de identifica\u00e7\u00e3o ser\u00e1 parecido. O processo de identifica\u00e7\u00e3o das m\u00e1quinas \u00e9 chamado de endere\u00e7amento IP. Vamos abrir o terminal de comando e verificar nosso endere\u00e7o IP. No Mac e Linux: ifconfig Verificar inet No Windows: ipconfig Verificar o Endere\u00e7o IPv4 Em todo o caso o numero do seu IP parecido com esse 192.168.1.21 . Certo agora sei o que \u00e9 endere\u00e7o de IP, mas para que serve? \u00b6 Ele serve para dizer seu endere\u00e7o, ou seja, a casa que voc\u00ea mora por exemplo. E vamos tentar encontrar o endere\u00e7o do Google. Mas para isso vamos usar uma ferramenta chamada ping . L\u00e1 no seu terminal digite: ping www.google.com.br E voc\u00ea vai recever um retorno parecido com esse: PING www.google.com.br ( 142 .251.129.35 ) 56 ( 84 ) bytes de dados. 64 bytes de gru06s72-in-f3.1e100.net ( 142 .251.129.35 ) : icmp_seq = 1 ttl = 120 tempo = 3 .22 ms 64 bytes de gru06s72-in-f3.1e100.net ( 142 .251.129.35 ) : icmp_seq = 2 ttl = 120 tempo = 4 .18 ms 64 bytes de gru06s72-in-f3.1e100.net ( 142 .251.129.35 ) : icmp_seq = 3 ttl = 120 tempo = 4 .12 ms 64 bytes de gru06s72-in-f3.1e100.net ( 142 .251.129.35 ) : icmp_seq = 4 ttl = 120 tempo = 4 .54 ms E apareceu um numero estranho na primeira linha ap\u00f3s o Google, o que ser\u00e1 esse numero? Bem se voc\u00ea reparou no seu ip, ele \u00e9 bem parecido n\u00e9? Ent\u00e3o esse \u00e9 o numero IP do Google 142.251.129.35 se voc\u00ea copiar e colar no seu navegador ele vai te direcionar para pagina de pesquisa do Google. Por tr\u00e1s dos panos \u00e9 assim que a rede se conecta, claro que ainda tem um pouco mais de informa\u00e7\u00e3o envolvido mais vamos chegar l\u00e1, vou d\u00e1 algumas dicas para pesquisar: DNS, ICMP, RTT e TTL. DNS - Domain Name System ICMP - Internet Control Message Protocol RTT - Round trip time TTL - Time to Live Curiosidade: O ping usa o protocolo ICMP, para enviar uma requisi\u00e7\u00e3o (Echo Request) para m\u00e1quina remota e aguarda o retorno dessa m\u00e1quina remota (Echo Reply). Certo me conectei no site do Google que \u00e9 uma empresa dos EUA, como isso \u00e9 possivel? \u00b6 Bom, \u00e9 verdade como um computador aqui no Brasil se conectar em um computador l\u00e1 nos EUA? A conex\u00e3o segue por uma rota, entre voc\u00ea e o destino, ou seja, ele vai passar por diversos dispositivos que est\u00e3o mediano essa conex\u00e3o. Vamos abrir o terminal novamente e digite: No Windows: tracert www.google.com.br No Mac ou Linux: traceroute www.google.com.br E ele vai te responder dessa forma: 1 _gateway (192.168.1.21) 0.805 ms 0.757 ms 1.620 ms 2 10.255.1.2 (10.255.1.2) 2.803 ms 2.880 ms 2.940 ms 3 10.55.55.1 (10.55.55.1) 3.245 ms 3.715 ms 3.542 ms 4 * * * 5 218.30.38.13 (218.30.38.13) 4.907 ms 5.420 ms 5.667 ms 6 84.16.7.214 (84.16.7.214) 7.380 ms 7.712 ms 7.973 ms Veja que o IP est\u00e1 mudando para cada linha que ele retorna, ou seja, ele est\u00e1 indo em dire\u00e7\u00e3o ao endere\u00e7o da Google para se comunicar com ele. Ele pode ter mais ou menos linhas, mas a logica \u00e9 simples a requis\u00e3o vai para o seu provedor de internet e l\u00e1 recebe a resposta do endere\u00e7o que voc\u00ea est\u00e1 procurando. Temos outro detalhe para aborda sobre essa rota: 4 * * * Na rota numero 4* ela retornou diferente das outras com os asterisco, o que significa? Basicamente a pessoa/empresa que administra esse IP pode ter desabilitado a resposta do ICMP da m\u00e1quina, para evitar a sobrecarga de tr\u00e1fego e por quest\u00f5es de seguran\u00e7a.","title":"Redes para Sobreviv\u00eancia"},{"location":"rede/O%20que%20%C3%A9%20Rede%3F/#para-iniciar-vamos-nos-perguntar-o-que-e-a-rede","text":"Em termos mais simples, uma rede consiste em dois ou mais computadores que est\u00e3o conectados para compartilhar informa\u00e7\u00f5es. Todas as redes, n\u00e3o importa qu\u00e3o complexas sejam, baseiam se neste principio simples. Embora isto possa parecer como uma id\u00e9ia basica, o conceito foi uma grande conquista na \u00e1rea das comunica\u00e7\u00f5es, ou seja, desde um ambiente dom\u00e9stico, em que temos dois computadores e uma impressora, at\u00e9 grandes corpora\u00e7\u00f5es com centenas de usu\u00e1rios, m\u00e1quinas potentes com servidores, at\u00e9 a mais famosa, a internet.","title":"Para iniciar vamos nos perguntar, o que \u00e9 a rede?"},{"location":"rede/O%20que%20%C3%A9%20Rede%3F/#endereco-de-ip-como-chegar-la","text":"Vamos lembrar como era alguns anos atr\u00e1s quando ainda envi\u00e1vamos cartas: era necessario uma carta com o destinario e o endere\u00e7o para que o carteiro saber aonde devia entregar a carta. No mundo da internet, o processo de identifica\u00e7\u00e3o ser\u00e1 parecido. O processo de identifica\u00e7\u00e3o das m\u00e1quinas \u00e9 chamado de endere\u00e7amento IP. Vamos abrir o terminal de comando e verificar nosso endere\u00e7o IP. No Mac e Linux: ifconfig Verificar inet No Windows: ipconfig Verificar o Endere\u00e7o IPv4 Em todo o caso o numero do seu IP parecido com esse 192.168.1.21 .","title":"Endere\u00e7o de IP, como chegar l\u00e1?"},{"location":"rede/O%20que%20%C3%A9%20Rede%3F/#certo-agora-sei-o-que-e-endereco-de-ip-mas-para-que-serve","text":"Ele serve para dizer seu endere\u00e7o, ou seja, a casa que voc\u00ea mora por exemplo. E vamos tentar encontrar o endere\u00e7o do Google. Mas para isso vamos usar uma ferramenta chamada ping . L\u00e1 no seu terminal digite: ping www.google.com.br E voc\u00ea vai recever um retorno parecido com esse: PING www.google.com.br ( 142 .251.129.35 ) 56 ( 84 ) bytes de dados. 64 bytes de gru06s72-in-f3.1e100.net ( 142 .251.129.35 ) : icmp_seq = 1 ttl = 120 tempo = 3 .22 ms 64 bytes de gru06s72-in-f3.1e100.net ( 142 .251.129.35 ) : icmp_seq = 2 ttl = 120 tempo = 4 .18 ms 64 bytes de gru06s72-in-f3.1e100.net ( 142 .251.129.35 ) : icmp_seq = 3 ttl = 120 tempo = 4 .12 ms 64 bytes de gru06s72-in-f3.1e100.net ( 142 .251.129.35 ) : icmp_seq = 4 ttl = 120 tempo = 4 .54 ms E apareceu um numero estranho na primeira linha ap\u00f3s o Google, o que ser\u00e1 esse numero? Bem se voc\u00ea reparou no seu ip, ele \u00e9 bem parecido n\u00e9? Ent\u00e3o esse \u00e9 o numero IP do Google 142.251.129.35 se voc\u00ea copiar e colar no seu navegador ele vai te direcionar para pagina de pesquisa do Google. Por tr\u00e1s dos panos \u00e9 assim que a rede se conecta, claro que ainda tem um pouco mais de informa\u00e7\u00e3o envolvido mais vamos chegar l\u00e1, vou d\u00e1 algumas dicas para pesquisar: DNS, ICMP, RTT e TTL. DNS - Domain Name System ICMP - Internet Control Message Protocol RTT - Round trip time TTL - Time to Live Curiosidade: O ping usa o protocolo ICMP, para enviar uma requisi\u00e7\u00e3o (Echo Request) para m\u00e1quina remota e aguarda o retorno dessa m\u00e1quina remota (Echo Reply).","title":"Certo agora sei o que \u00e9 endere\u00e7o de IP, mas para que serve?"},{"location":"rede/O%20que%20%C3%A9%20Rede%3F/#certo-me-conectei-no-site-do-google-que-e-uma-empresa-dos-eua-como-isso-e-possivel","text":"Bom, \u00e9 verdade como um computador aqui no Brasil se conectar em um computador l\u00e1 nos EUA? A conex\u00e3o segue por uma rota, entre voc\u00ea e o destino, ou seja, ele vai passar por diversos dispositivos que est\u00e3o mediano essa conex\u00e3o. Vamos abrir o terminal novamente e digite: No Windows: tracert www.google.com.br No Mac ou Linux: traceroute www.google.com.br E ele vai te responder dessa forma: 1 _gateway (192.168.1.21) 0.805 ms 0.757 ms 1.620 ms 2 10.255.1.2 (10.255.1.2) 2.803 ms 2.880 ms 2.940 ms 3 10.55.55.1 (10.55.55.1) 3.245 ms 3.715 ms 3.542 ms 4 * * * 5 218.30.38.13 (218.30.38.13) 4.907 ms 5.420 ms 5.667 ms 6 84.16.7.214 (84.16.7.214) 7.380 ms 7.712 ms 7.973 ms Veja que o IP est\u00e1 mudando para cada linha que ele retorna, ou seja, ele est\u00e1 indo em dire\u00e7\u00e3o ao endere\u00e7o da Google para se comunicar com ele. Ele pode ter mais ou menos linhas, mas a logica \u00e9 simples a requis\u00e3o vai para o seu provedor de internet e l\u00e1 recebe a resposta do endere\u00e7o que voc\u00ea est\u00e1 procurando. Temos outro detalhe para aborda sobre essa rota: 4 * * * Na rota numero 4* ela retornou diferente das outras com os asterisco, o que significa? Basicamente a pessoa/empresa que administra esse IP pode ter desabilitado a resposta do ICMP da m\u00e1quina, para evitar a sobrecarga de tr\u00e1fego e por quest\u00f5es de seguran\u00e7a.","title":"Certo me conectei no site do Google que \u00e9 uma empresa dos EUA, como isso \u00e9 possivel?"}]}